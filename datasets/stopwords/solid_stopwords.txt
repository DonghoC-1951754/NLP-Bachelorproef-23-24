Solid specification let people store data securely decentralized data store called Pods. Pods like secure personal web server data. kind information stored Solid Pod. control access data Pod. decide data share (be individuals, organizations, and/or applications). Furthermore, revoke access time. store access data Pod, application use standard, open, interoperable data format protocols. Developers Users Community Solid: data, choice. Advancing Web standard empower individual groups. Solid let individual group store data securely decentralized data store called Pods. Pods like secure web server data. data stored Pod, owner control people application access it. Pod: data, control kind data stored Solid Pod, structured data regular file might store Google Drive Dropbox folder. Individuals group grant revoke access slice data needed. Fully interoperable standard data Solid Pod stored accessed using standard, open, interoperable data format protocols. Solid us common, shared way describing thing relationship one another different application understand. give Solid unique ability allow different application work data. Share safely Anyone anything access data Solid Pod us unique ID, authenticated decentralized extension OpenID Connect. Solid's access control system us IDs determine whether person, group, application ha access resource Pod. Solid creates interoperable ecosystem application data Data stored Solid Pods power ecosystem interoperable application individual group free use data seamlessly across different application services. Leave email address get bite-sized overview everything Solid, delivered straight inbox month. What's New Developers Users Community Solid Solid let people store data securely decentralized data store called Pods. Pods like secure personal web server data. kind information stored Solid Pod. control access data Pod. decide data share (be individuals, organizations, and/or applications). Furthermore, revoke access time. store access data Pod, application use standard, open, interoperable data format protocols. Solid Servers Pods Solid Server host one Solid Pods. Pods store data: Pod fully controlled Pod owner (i.e., you). Pods data access rule fully distinct Pods. get Pod , may choose Pod. even multiple Pods. hosted Pod Provider different Providers self-hosted combination thereof. number Pods well Solid Server Servers use effectively transparent application service use. because, Solid ecosystem, data linked specific Pod. true data well data others shared you. Data store kind data Solid Pod. make Solid special ability store data way promotes interoperability. Specifically, Solid support storing Linked Data. Structuring data Linked Data mean different application work data. Access Solids systems, determine people application access data. grant revoke access slice data needed. Consequently, data, application decide use granted access wider diverse set information. share data others, also share data you. creates rich collaborative experience across combination personal shared data. Solid Applications Solid application store access data Pods using . Within interoperable Solid ecosystem, different application access data instead requiring separate data silo specifically applications. example, instead inputting email bank statement notification service, phone billing service, etc., instead store information Pod grant access read email information disparate services/applications. developer resources, see . listing Solid applications, see . What's New Developers Users Community Getting started Solid developer get started Solid, need Solid Pod WebID. either use existing Pod provider run server. Using existing Pod provider create aSolid Pod existing provider. list existing Pod providers, see . Running server following open-source server available, want run own: Node.js Node.js plugin Nextcloud PHP Rust instruction on: Running Community Solid Server, see . Running Node Solid Server, see . Developing first app set Pod WebID, youre ready develop app. Various Solid client library may provide tutorial beginners; example, Inrupt offer , O.Team offer . Community assistance Check existing applications. interesting approach follow: PodOS (Web Components) https://github.com/pod-os/PodOS solid-uix (Native Web Components) https://github.com/SolidOS/solid-uix Solid web frameworks: ember-solid start-to-finish Solid Ember App (Aad Versteden) [solid/nextjs/ts] app (Arne Hassel) also look Solid apps at: Youtube videos: What's New Developers Users Community Solid Developer Tools & Libraries number robust developer library save re-inventing wheel. Everyone invited contribute new library provide feedback existing library - see . - mock server used testing apps - file manager Solid pod - tool let write simply HTML/JavaScript interact Solid Pod Session, Profile, Inbox, Chat Session, Profile, Inbox, Chat - operating system Solid - solid databrowser technology stand-alone electron app - file manager Solid pod - GUI front-end Solid document management syntax-highlighting pod editor - command line, interactive shell, batch processor Solid document management - Browse manage thing Solid pod typical Solid app perform one function using one associated libraries: login & manage session () parse & query linked data () manage document information flow () provide user interface () Beginning developer may want start one interface library provide pre-built components. Advanced developer might want look and/or participate . - check Web Access Control ACLs - login session management -login session management - nodejs login/sesseion Pods & Solid access local file systems, backends library making RDF querying easy way query Linked Data using GraphQL - library advanced manipulation RDF - extension adapting Solid engine - library easy manipulation RDF See also handy comparison three commonly used linked data libraries. create, read, copy, upload & mange file & folder collection common RDF namespaces used Solid project - Solid access non-Solid space file systems, browser IndexedDB, Dropbox - Data access management manipulation Inrupt - HTML custom element (aka web components) read write Solid pods. - SolidOS code stack Solid includes: - User Interface widget utility Solid - Solid-compatible data mashup library Databrowser - set core solid-compatible apps based solid-ui - Core business logic SolidOS - SolidOS standalone desktop app (experimental) - highly modular flexible meta query engine Web - collection high-performance RDF library JavaScript developer focus usability : use Web Cryptography API Node.js - implementation RDFJS specification Perl - Perl Solid-OIDC client command line tool example app Python - simple Hello World Flask app read private data Solid pod - Python library creating managing file folder Solid pod - client authentication via Solid-OIDC - client authentication via client credential Rust - simple example authenticated reads/writes Solid pod Kotlin - simple example Solid-OIDC using Spring Kotlin Swift - Authentication package Solid Pod PHP - PHP library creating file folder Solid pod implementing Solid OIDC, also contains bundle frameworks. Related Tools : Convert RDF syntax another : Dereference prefix full domain name : ontology editor Related library Python Java PHP new tool library, suggested addition change page, please . What's New Developers Users Community Solid Apps Showcase Application Description Track medium never miss beat. - . GNU General Public License v3.0 2020 - . GNU General Public License v3.0 2020 - . general Pod Browser File manager IDE. - Solid app help manages file Pod. - IDE editing Solid Pods Jasmine Leonard. Allows browse Solid Pod offering multiple view information including overview, graph, doc, gallery grid well easy use Solid collaboration control file management. 30 day free trial followed $10 per user/per month. 2018 Social Application Description Source code MIT License Copyright 2019 student course led react app view browse Solid WebID profiles. - ) Add friends. - 2018 Identity credential document generator creates X.509 certificate save WebID-Profile document Solid Pod set relation required WebID-TLS WebID-TLS+Delegation.Copyright 2013-2023 Lets form social group Solid Pod. . Games Application Description Movies Application Description Track medium never miss beat. - . GNU General Public License v3.0 2020 - . GNU General Public License v3.0 2020 - . movie tracking sharing application personalised recommendations. - ( Project). Content, Notes, Blogging Publishing Application Description simple note-taking app store note Solid Pod. - editor app raw file using v interface. - . Blogging platform. - client side editor decentralised article publishing, annotations, social interactions. - Solid app view edit profile data. - Solid app manage bookmarks. - Bookmarking app. - 2019 Vincent Tunru. Bookmarks app community sharing. Geolocation Application Description (deployed ) 2019. Application Description Uses currently able fetch weather United States. 2019. Dylan Martin. Linked Data visualization sharing collaboration via Solid. 2020. Offline-first Recipes Manager Implements simple CRUD operation REST API solid-file-client, writing tasks. Chrome extension extract structured data web page store Solid Pod. Pod Management Application Description Tool create share resource contact POds POCKet. modular SoLiD application based webcomponents, vuejs, vue-bootstrap, using community libs like solid-file-client, ldflex-query, tripledoc switching. app manage Pod. - Pod store. - Solid app help manage file Pod. - RDF editor save content Solid Pod. - 2019-2023 module , ODS-Briefcase includes support Solid Pods, enabling read/write access WebDAV-compliant client, subject Briefcase-managed ACLs. (Briefcase connects Pod Pod Owner, ha full privileges.) - 2019-2023 Extracts Metadata variety notation HTML doc enables storage Solid Pod via Save feature. - 2019-2023 SPARQL Query Service Endpoint support WebID-OIDC authenticating WebIDs en route functionality isnt granted un-authenticated Public; e.g., generating description Web-Accessible Document RDF, publishing said description 5-Star Linked Data form - 2019-2023 component web app. Distills action API documentation constructed using RDF OpenAPI; support WebID-OIDC authentication 2019-2023 Widget authorisation. - File manager IDE. - Allows browse Solid Pod offering multiple view information including overview, graph, doc, gallery grid well easy use Solid collaboration control file management. 30 day free trial followed $10 per user/per month. 2018 LinkedPipes Applications create visualiser based linked data. - general Pod Browser Browse manage thing Pod. Based . Apps installed Source Application Description Processes notifications. solid-based alternative Doodle creating WebID account Solid compatible providers. - Uses national weather service API currently able fetch weather United States. 2019. Dylan Martin. way create, store, query event using user card. 2019. Dylan Martin. framework developed within context Solid. composable data browser aimed provide great user experience Solid POD services, well RDF sources, desktop mobile web browsers. . App inclusion exclusion criterion criterion app Solid-compatible are: identifying user necessary, must able log using WebID pointing Identity Provider choice Data consumed app fetched Solid Pods possible Data generated app stored Solid Pods interaction app, pods, Identity Provider(s) must compliant Solid specification Please note apps falling following category listed page, even match criterion above: Apps intentionally indirectly causing harm anyone Apps purpose could widely considered unethical Apps designed enable generation and/or dissemination hate speech Apps encouraging stereotype violent behaviour towards person group Apps malicious intent, data theft Apps designed fulfill illegal purposes, drug traffic, stolen information exchange, extorsion Apps sharing user information third-party without user consent Apps reported important technical security issue compromise user Pods Want add eligible Solid-compatible app list? Contact Solid Manager via . Disclaimer: list doe represent endorsement Solid Project. apps list undergo testing time, guarantee security quality implied inclusion list. goal list showcase vibrancy Solid community encourage early app builder collaborate learn other. believe one apps insecure non-functional removed list, please raise issue tag apps creator maintainer. creator maintainer app doe respond within 24 hour indicate fix problem, Solid Creator remove app listing. What's New Developers Users Community Get Pod Pods store data. kind data stored Solid Pod. stored Pod, control access data. get Pod Pod Provider, may choose self-host Pod. Get Pod Pod Provider choosing Pod Provider, question may want consider are: involved? legal identity provider important factor data handled. example, provider may engage third party host data. Mapping clearly involved element provision important step picking Pod Provider. involved party located, data physically stored? geographical location legal entity involved physical location hosting important factor determining law govern provider responsibilities. Depending nationality degree trust various laws, may prefer specific geographical locations. terms? Reading Providers Terms good way understand implication picking provider. Solid, tied provider choose now. is, ability move data elsewhere want. following table list Pod Provider: Provider Responsible Domain Name Terms Responsible Hosting Hosting Location Solid Implementation Germany UK France USA EU France , , EU Finland France provider want add service list, please create pull request update . Self-host Pod Self-hosting Pod (i.e., running ) provides control data. way, dont entrust third party data. Self-hosting requires technical overhead may suitable everyone yet. future, would like make self-hosting user-friendly option. great thing Solid flexibility offers: choose get Pod provider now, move self-hosting later. Next Steps get Pod, also issued unique WebID. WebID act identity Solid ecosystem. example, share picture Pod someone, would indicate person person WebID. Pod WebID, check start storing data Pod. even . What's New Developers Users Community Stay date events, learning resources, recent developments. Recent Issues Month Solid Leave email address get bite-sized overview everything Solid, delivered straight inbox month. 2021 2020 2019 What's New Developers Users Community Solid Events Solid Events provide opportunity meet others working Solid interested Solid. Solid Events run people like you. interested coordinating Solid Event near you, reach Solid Manager . Interested speaking upcoming Solid World? fill . another Solid oriented event share? Make pull request . 2024 Events Date Event Organiser Recordings, Slides Notes 2024-02-27 / Solid World wa held around theme Solid Social Benefit: Delivering Shared Public Resources. heard news Solid Team presentation PASS Project, Open Commons, SleepyBike Project, Digital Flanders. 2024-05-02 - 2024-05-03 (Leuven, Belgium) / 2024-02-28 (Ghent, Belgium) / on-site event only, . 2023 Events Date Event Organiser Recordings, Slides Notes 2023-09-27 Aaron Coburn updated u news W3Cs annual meeting. Jackson Morgan presented . Davi Ottenheimer presented Solid enable responsible AI, team Northeastern University presented predictive generative AI leverage Solid. 2023-06-28 Solid World wa held 11:00 a.m. EDT/1700 CEST. wa update CSS, announcement Inrupts Solid hackathon winners, presentation Graphmetrix Motius. . 2023-05-31 - 2023-06-1 dedicated workshop/panel session Solid project conference, alongside interesting people presentation many like-minded projects. Location: Helsinki 2023-03-30 - 2023-03-31 goal symposium provide forum researchers, early adopter company public administration, community large discus current state art around Solid exchange idea developments. 2023-03-29 Ruben Verborgh updated u Solid W3C Working Group, Melissa Wood SolidMcr announced creation SolidUK. Esther de Loof SolidLab Flanders presented finding first annual . Oz Olivo presented Inrupts . 2023-02-21 discussing essential part make Solid apps, presentation Chase Hunt, contributor SolidOS, getting involved open source, opportunity join help grow Solid ecosystem. 2022 Events Date Event Organiser Recordings, Slides Notes 2022-12-08 Jun Zhao, Hunar Batra Rui Zhao Oxford University presented two Solid-based applications: . Jackson Morgan presented . also heard formation Solid W3C Working Group. 2022-11-10 BBC Research & Development team presented new watch party product, . 2022-10-13 Eliott Behar, privacy human right attorney, Davi Ottenheimer, VP Trust Digital Ethics Inrupt, Michiel Fierens, doctoral researcher SolidLab Flanders, participated panel discussion Solid New Data Regulations. 2022-10-06 Register 2022-09-08 previewed launch Trinpod service Esther de Loof u Melissa Wood told u latest 2022-07-28 Right Rent, Right Work, Pre-Employment Screening, preventing modern slavery, DBS check - CDD Services introduce two product requiring help reach market. Sign 2022-07-22 / Muze host meetup Solid, Linked Data Decentralized Web MCH 2022, Zeewolde, Netherlands. talk workshop three afternoons, starting July 23th. youve got something show tell, tell u youre coming, please mail . 2022-06-09 Presentation: Ruben Verborgh told u Aaron Coburn told u 2022-05-12 Presentation: Flanders Data Utility Company Team: Hear first-hand insight Flemish Data Utility Company want stimulate citizen trust sharing data, focusing responsible secure data sharing. Data Utility Companys Solid Pod platform designed establish trusted data ecosystem groundbreaking technology. Data Utility Companys platform mitigates cost risk associated innovative technology, lowering threshold organization enter Solid ecosystem. 2022-05-09 / 2022-04-28 / Mel W. 2022-04-14 Presentation: Philippe Duchesne, DataVillage & Luk Overmeire, VRT. DataVillage developing platform perform confidential data processing personal data, end user allow service provider process data produce derived data, guarantee original data read service provider itself. DataVillage joined VRT, Flemish public broadcasting company, using DataVillage platform build user-controlled content recommendation service audience. 2022-03-10 Presentations: Jasmine Leonard, Solid developer tool Sebastien Rosset, , new kind architecture web application aim reconcile ActivityPub Solid standard 2022-02-10 Presentations: Gertjan de Mulder, Pete Edwards, link meetup shared 2022-01-13 Presentations: , Chair Solid Editor, presented recent milestone release . Ruben Verborgh, Professor decentralized Web technology Ghent University, presented . link meetup shared Earlier Events Date Event Organiser Recordings, Slides Notes 2021-11-04 Presentations: SolidOS code home: Justin Bingham gave update growth specification Solid Solid team. Jeff Zucker explained new Solid Glossary welcoming newcomers. glossary contains libraries, essential tools, documentation, community topics. 2021-10-21 Solid Editorial Team would like increase communication community member actively implementing Solid compliant server client technologies. session open public, welcome everyone attend session. However, effort maintain focus stated goal session, individual actively engaged implementing Solid compliant server client technology queued speak. actively participate, implementer must: 1. member Solid Community Group 2. RSVP advance . Must able cite active implementation work. Legitimate citation include link Github repositories, link product description websites, otherwise credible explanation active work efforts. Implementers encouraged submit questions, issues, topic advance . may included RSVP, sent separately afterwards. Minutes recorded, posted https://github.com/solid/specification/tree/main/meetings. 2021-10-07 , Schedule Solid Project Review: https://calendly.com/marrelle-bailey/website-research, Join , Tanis Presentation: , , Email: ; Ennos Presentation: , , , , , Contact Email: mailto:; Marias & Jans Presentation: , , , , , PoC Project repo: , , , , 2021-09-02 ; Ruben Presentation Links: , , , , ; Jacksons Presentation: 2021-08-10 wa hostess.Talks: Matter You, BBC Solid. CERN-Solid Proof Concept. Additional links: , , . 2021-08-05 Also attendant Maria Dimou Rubens Update: & Oz Update: ; ; 2021-07-01 2021-06-21 2021-06-21 Solid Interplanetary File SystemFabrizio Parrillo (U. Basel, Switzerland), Christian F Tschudin (U. Basel, Switzerland) 2021-06-03 Also attendant Maria Dimou. Tims Flanders Press: ; : ; : 2021-05-27 2021-05-07 2021-05-06 Also attendant Maria Dimou. Jackson Morgans links: , , , , , . Christian Buggedeis links: , .Aaron Coburns Jack Lawsons links: , , . 2021-04-01 Also attendant Maria Dimou. Tims talk: .Ozs talk: .Graphmetrix talk: , .Nextcloud/PDS Interops talk: , , , , , , .Spoter.Mes talk: . 2021-03-22 wa hostess. gave u short introduction Solid, talked RDF. told u SolidOS. presented authentication process Solid.Recording first Women Solid Meetup . Additional links: , , , . 2021-03-04 . Also attendant Maria Dimou. Community Spotlights: created .Ruben Verborgh gave update Community Solid Server (CSS) (mentioned links: ). Osmar Olivo asked . presented theyre working (). Creafree (). 2021-02-04 . Also, attendant Maria Dimou. Tim Berners-Lees Update: . Ruben Verborghs update Community Solid Server: . Osmar Olivo update Node.js support: . Presentation: , , . Jasmine Leonards Presentation: , , , , . Hindia Mohammeds Presentation: 2021-01-07 . Resources event: , , , , , . 2020-12-29 2020-12-03 . Rubens presentation: , . CERNs presentation: , . . Digitas . 2020-11-05 . attendant Maria Dimou. 2020-10-01 . attendant Maria Dimou. 2020-09-03 slides: 2020-08-06 slides: , . attendant Maria Dimou. 2020-07-02 2020-06-04 2020-05-07 2020-04-02 2020-03-05 2020-02-20 - 2020-02-19 2020-02-18 2020-02-10 Christian Buggedei 2020-01-30 2020-01-07 2019-12-10 Erwin Folmer 2019-11-20 Kartika Tulusan 2019-11-21 Solid Montreal 2019-10-26 2019-10-11 Sarmad Reda 2019-10-10 Solid Amsterdam 2019-09-12 2019-07-20 Solid Beijing 2019-07-05 2019-06-28 Bart Roorda 2019-06-12 2019-05-29 2019-05-22 2019-05-13 2019-05-08 Solid New York Brian Cort 2019-05-02 2019-04-09 2019-04-09 2019-03-27 2019-03-22 2019-03-21 2019-02-20 2019-02-08 Solid Stockholm 2019-01-09 Solid Berlin 2018-12-12 Solid Oslo 2018-12-11 Solid Utrecht 2018-12-05 2016-04-11 What's New Developers Users Community Press looking get speaker interview Solid? Contact u description looking for. Talks Mentioning Solid 2023 2023-02-04 Zero Hero Solid - FOSDEM Noel De Martin 2021 2021-01-01 Angelo Veltens 2020 2020-12-11 Virginia Balseiro 2020-10-28 Ruben Verborgh 2020-10-06 Ruben Verborgh 2020-10-04 Michiel de Jong 2020-06-24 Tim Berners-Lee 2020-05-21 Jeff Zucker 2020-03-30 Ruben Verborgh 2020-02-27 NoelDeMartin 2020-02-24 Davi Ottenheimer 2020-02-19 Alejandro Juan Garcia 2020-02-18 NoelDeMartin 2020-02-07 Maria Dimou, Sarven Capadisli, Mitzi Lszl 2020-01-27 Michiel de Jong 2020-01-11 Jonas Smedegaard 2020-01-10 Alice Poggioli 2019 2019-12-20 Ruben Verborgh 2019-12-11 Alejandro Juan Garca 2019-11-26 Nocturne Informatie Vlaanderen Ruben Verborgh 2019-11-18 Tim Berners-Lee 2019-11-14 Mitzi Lszl & Pieter van Everdingen 2019-10-25 Sarven Capadisli 2019-10-24 Mitzi Lszl 2019-10-23 Ruben Verborgh 2019-10-10 Mitzi Lszl 2019-10-04 Ruben Verborgh 2019-09-26 Sarven Capadisli 2019-09-26 Ruben Verborgh 2019-09-20 Ruben Verborgh 2019-09-15 Mitzi Lszl 2019-09-14 Ruben Verborgh 2019-09-12 Ruben Verborgh 2019-09-06 Sarven Capadisli 2019-08-11 Die Rckeroberung de Social Web Angelo Veltens 2019-07-02 Ruben Verborgh 2019-07-01 Mitzi Lszl & Justin Bingham 2019-06-25 Postgress Tim Berners-Lee 2019-06-19 Ruben Verborgh 2019-05-28 Ruben Verborgh 2019-04-24 Ruben Verborgh 2019-04-10 Ruben Verborgh 2019-04-09 Ruben Verborgh 2019-04-04 STRP Festival Ruben Verborgh 2019-03-28 Juan Lupin 2019-03-28 Beyond Data Event Ruben Verborgh 2019-03-10 John Bruce, Justin Bingham 2019-03-06 Tim Berners-Lee 2019-03-05 Ruben Verborgh 2019-02-19 Ruben Taelman 2019-02-07 Mitzi Lszl 2019-02-03 Ruben Verborgh 2019-01-17 Ruben Verborgh 2018 2018-12-14 Ruben Verborgh 2019-12-12 Ruben Verborgh 2018-10-27 Tim Berners-Lee 2018-10-08 Tim Berners-Lee & Ruben Verborgh 2018-10-04 AjayKumar 2018-09-19 Ruben Verborgh 2018-11-14 Ruben Verborgh 2018-09-13 Web Foundation Seminar Ruben Verborgh 2018-09-06 Ruben Verborgh 2018-08-23 Ruben Verborgh 2018-08-02 Ruben Verborgh 2018-06-05 Ruben Verborgh 2018-05-28 Tim Berners-Lee 2018-05-15 Ruben Verborgh 2018-05-15 Tim Berners-Lee 2018-04-14 Ruben Verborgh 2018-04-28 Tim Berners-Lee 2018-03-22 Ruben Verborgh 2018-01-06 Tim Berners-Lee 2017 2017-12-12 Herbert van der Sompel 2016 2016-07-08 Tim Berners-Lee 2016-04-12 Andrei Sambra, Amy Guy, Sarven Capadisli, Nicola Greco 2016-04-07 Andrei Sambra & Nicola Greco 2015 2015-10-18 Andrei Sambra & Nicola Greco 2015-10-13 Andrei Sambra 2015-09-25 Andrei Sambra & Nicola Greco Mentions Solid Articles 2023 2023-03 2023-01-19 2023-01-06 2022 2022-11-26 2022-11-21 2022-11-08 2021 2021-04-15 2020 2020-07-28 2020-07-12 2020-07-01 2020-06-12 2020-06-02 2020-06-02 2020-05-20 2020-05-06 2020-04-29 2020-04-15 2020-04-14 2020-04-07 2020-04-04 2020-04-01 2020-03-30 2020-03-29 2020-03-27 2020-02-25 2020-02-24 2020-02-24 2020-02-24 2020-02-24 2020-02-24 2020-02-21 2020-02-18 2020-02-17 2020-02-14 2020-02-13 2020-02-13 2020-02-13 2020-02-12 2020-02-12 2020-02-05 2020-02-05 2020-01-23 2020-01-22 2020-01-20 2020-01-18 2020-01-16 2020-01-05 2019 2019-12-06 2019-11-29 2019-11-20 2019-11-13 2019-11-12 2019-11-08 2019-11-4 2019-10-29 2019-10-28 2019-10-26 2019-10-23 2019-10-20 2019-10-11 2019-09-24 2019-09-16 2019-09-13 2019-09-06 2019-09-02 2019-08-29 2019-08-18 2019-08-08 2019-08-02 2019-08-01 2019-08-01 2019-07-31 2019-07-30 2019-07-31 2019-07-30 2019-07-30 2019-07-30 2019-07-30 2019-07-29 2019-07-26 2019-07-24 2019-07-22 2019-07-21 2019-07-18 2019-07-17 2019-07-16 2019-07-16 2019-07-16 2019-07-11 2019-07-02 2019-06-25 2019-06-21 2019-06-17 2019-06-14 2019-06-13 2019-06-12 2019-06-10 2019-06-10 2019-06-07 2019-06-06 2019-06-06 2019-06-05 2019-06-03 2019-05-29 2019-05-28 2019-05-28 2019-05-26 2019-05-24 2019-05-22 2019-05-22 2019-05-20 2019-05-19 2019-05-19 2019-05-16 2019-05-11 2019-05-11 2019-05-04 2019-05-02 2019-04-24 2019-04-23 2019-04-19 2019-04-19 2019-04-12 2019-04-12 2020-04-09 2019-04-07 2019-04-05 2019-04-05 2019-04-05 2019-04-05 2019-04-05 2019-04-04 2019-04-03 2019-04-02 2019-04-01 2019-03-27 2019-03-27 2019-03-26 201903-26 2019-03-25 2019-03-22 2019-03-22 2019-03-21 2019-03-19 2019-03-29 2019-03-18 2019-03-17 2019-03-15 API Best Class: Solid? Decentralized Web? Tim Berners-Lee something again. 2019-03-14 2019-03-14 2019-03-14 2019-03-14 2019-03-14 2019-03-13 2019-03-12 2019-03-12 2019-03-12 2019-03-12 2019-03-12 2019-03-12 2019-03-12 2019-03-11 2019-03-11 2019-03-10 2019-03-06 2019-03-05 2019-03-05 2019-03-05 2019-03-05 2019-03-05 2019-03-05 2019-03-05 2019-03-01 2019-02-26 2019-03-30 2019-02-05 2019-02-14 2019-02-15 2019-02-20 2019-02-20 2019-02-21 2019-02-22 2019-02-22 2019-02-27 2019-02-28 2019-01-29 2019-01-29 2019-01-29 2019-01-26 2019-01-25 2019-01-21 2019-01-19 2019-01-10 2019-01-09 2019-01-19 2019-01-08 2019-01-06 2019-01-04 2019-01-03 2019-01-03 2018 2018-12-31 2018-11-29 2018-10-29 2018-10-16 2018-10-06 2018-10-05 2018-09-30 2018-09-29 2018-09-28 2018-09-23 2018-08-29 2018-08-27 2018-08-14 2018-07-03 2018-07-02 2018-07-01 2017 2017 2016 2016-08-10 2015 2015-11-02 2009 2009-08-17 2009-08-16 What's New Solid Protocol Version 0.10.0, 2022-12-31 detail document version Latest published version Previous version Editors draft TimeMap Editors Published 2020-12-16 Modified 2022-12-31 Repository Language English License Document Status Published Reply Policy Rule Unique Identifier Target Permission Assigner Action MIT License. Copyright 20192022 . Abstract document connects set specification that, together, provide application secure permissioned access externally stored data interoperable way. Status Document section describes status document time publication. document wa published Version 0.10.0. section incorporated reviewed following . However, information document still subject change. invited feedback, comments, question might have. Publication Version 0.10.0 doe imply endorsement W3C Membership. document may updated, replaced obsoleted document time. inappropriate cite document work progress. document wa produced group operating . human-readable available. Table Contents Introduction section non-normative. aim Solid project line Web itself: empowerment towards equitable, informed interconnected society. Solid add existing Web standard realise space individual maintain autonomy, control data privacy, choose application service fulfil needs. Solid ecosystem encapsulates set specification guided principle adopted also priority values. acknowledge every technical decision ha ethical implication end user (short-term) well society (long-term). contribute towards net positive social benefit, use [] orient ourselves. consensus technical design informed common use cases, implementation experience, use. overarching design goal Solid ecosystem evolvable provide fundamental affordances decentralised Web application information exchange way secure privacy respecting. environment, actor allocate identifier content, shape store data access to, set access controls, use preferred application service achieve them. general architectural principle Solid specification borrowed []. component described specification may evolve independently according principle orthogonality order increase flexibility robustness Solid ecosystem. that, specification loosely coupled indicate feature overlap governed another specification. Extensibility well variability also taken account specification. specification ecosystem describe Solid server client interoperable using Web communication protocols, global identifiers, authentication authorization mechanisms, data format shapes, query interfaces. specification accompanied supplemental documents, Primers Best Practices Guidelines help implementers form well-rounded understanding Solid ecosystem well way improve implementations. specification for: Resource server developer want enable client send retrieve information; Application developer want implement client perform operation resources. Terminology section non-normative. Solid Protocol specification defines following terms. term referenced throughout specification. storage storage space URIs affords agent controlled access resources. Solid app Solid app application read writes data one . URI Uniform Resource Identifier (URI) provides mean identifying resource []. resource resource target HTTP request identified URI []. container resource container resource hierarchical collection resource contains resources, including containers. root container root container container resource highest level collection hierarchy. resource metadata Resource metadata encompasses data resource described mean RDF statement []. agent agent person, social entity, software identified URI; e.g., WebID denotes agent []. owner owner person social entity considered right responsibility storage. owner identified URI, implicitly ha control resource storage. owner first set storage provisioning time changed. origin origin indicates HTTP request originates []. read operation read operation entail information resource existence description known. [] write operation write operation entail information resource created removed. [] append operation append operation entail information added removed. [] Namespaces Prefixes Namespaces Prefix Namespace Description rdf http://www.w3.org/1999/02/22-rdf-syntax-ns# [] ldp http://www.w3.org/ns/ldp# [] solid http://www.w3.org/ns/solid/terms# Solid Terms pim http://www.w3.org/ns/pim/space# Workspace Ontology acl http://www.w3.org/ns/auth/acl# ACL Ontology dcterms http://purl.org/dc/terms/ [] stat http://www.w3.org/ns/posix/stat POSIX File Status Conformance section describes conformance model Solid Protocol. Normative Informative Content assertions, diagrams, examples, note non-normative, section explicitly marked non-normative. Everything else normative. key word MUST, MUST NOT, SHOULD, MAY interpreted described [] [] when, when, appear capitals, shown here. key word strongly encouraged, strongly discouraged, encouraged", discouraged", can", cannot, could, could not, might, might used non-normative content. Specification Category Solid Protocol identifies following distinguish type conformance: API, notation/syntax, set events, processor behaviour, protocol. Classes Products Solid Protocol identifies following conforming implementations. product referenced throughout specification. Server build HTTP server [] [] defining medium types, HTTP header fields, behaviour resources, identified link relations. Client build HTTP client [], [], [] defining behaviour term fetching across platform. Interoperability Interoperability implementation tested evaluating implementation ability request respond HTTP message conform specification. Hypertext Transfer Protocol Solid need exchange data securely Internet, using HTTP Web standard. section describes detail part HTTP must implemented client servers. HTTP Server Servers MUST conform HTTP/1.1 Message Syntax Routing [] HTTP/1.1 Semantics Content []. Servers conform HTTP/2 []. Servers use TLS connection http URI scheme order secure communication clients. http http URI scheme supported, server MUST redirect http URIs http counterpart using response 301 status code Location header. Servers MUST conform HTTP/1.1 Conditional Requests []. Servers conform HTTP/1.1 Caching []. Servers MAY conform HTTP/1.1 Range Requests []. Servers MUST conform HTTP/1.1 Authentication []. client doe provide valid credential requesting resource requires (see ), server MUST send response 401 status code (unless 404 preferred security reasons). Server MUST reject PUT, POST PATCH request without Content-Type header status code 400. [] HTTP Client Clients MUST conform HTTP/1.1 Message Syntax Routing [] HTTP/1.1 Semantics Content []. Clients MAY conform HTTP/2 []. Clients MAY conform HTTP/1.1 Conditional Requests []. Clients MAY conform HTTP/1.1 Caching []. Clients MAY conform HTTP/1.1 Range Requests []. Clients MUST conform HTTP/1.1 Authentication [] need access resource requiring authentication (see ). client receives response 403 404 status code, client MAY repeat request different credentials. Clients MUST use Content-Type HTTP header PUT, POST PATCH request []. [] Uniform Resource Identifier Note: Storage Owner URI Ownership specification doe describe relationship storage owner Web architecture []. URI Slash Semantics slash (/) character URI path indicates hierarchical relationship segments, enables relative referencing []. semantics slash character shared server clients. Paths ending slash denote container resource. [] two URIs differ trailing slash, server ha associated resource one them, URI MUST correspond another resource. Instead, server MAY respond request latter URI 301 redirect former. []. Servers MUST authorize prior optional redirect. []. URI Persistence section non-normative. Servers re-use URIs, regardless mechanism resource created. Certain specific case exist URIs may reinstated identifies resource, consistent Web architecture []. [] Note: URI Reuse Servers wish disable URI re-use may want use 410 status code. Resources Storage Resource Servers MUST provide one . storage resource (pim:Storage) root container contained resource (see ). server support multiple storages, URIs MUST allocated non-overlapping space. Servers MUST advertise storage resource including HTTP Link header rel="type" targeting http://www.w3.org/ns/pim/space#Storage responding storage request URI. Clients determine resource type storage making HTTP HEAD GET request target URL, checking Link header rel="type" targeting http://www.w3.org/ns/pim/space#Storage. Clients determine storage resource moving URI path hierarchy response includes Link header rel="type" targeting http://www.w3.org/ns/pim/space#Storage. Clients discover storage making HTTP GET request target URL retrieve RDF representation [], whose encoded RDF graph contains relation type http://www.w3.org/ns/pim/space#storage. object relation storage (pim:Storage). [] [] Servers MUST include Link header rel="http://www.w3.org/ns/solid/terms#storageDescription" targeting URI storage description resource response HTTP GET, HEAD OPTIONS request targeting resource storage. Servers MUST include part storage description resource. Storage description statement include properties: rdf:type class whose URI http://www.w3.org/ns/pim/space#Storage. []. Servers MUST keep track least one storage implementation defined way. server want advertise owner storage, server MUST include Link header rel="http://www.w3.org/ns/solid/terms#owner" targeting URI owner response HTTP HEAD GET request targeting root container. [][][][] Resource Containment Solid ha notion container represent collection linked resource help resource discovery lifecycle management. 1-1 correspondence containment triple relative reference within path name hierarchy. []. follows resource discoverable container possible create orphan resources. [] representation behaviour container Solid corresponds LDP Basic Container MUST supported server. [] Servers determine value HTTP Last-Modified header field response HEAD GET request targeting container based change containment triples. Note: Container Last-Modified Comparison Last-Modified container change part container changes. avoid instant propagation change way root container. Last-Modified cannot reliably used check whether container representation ha changed way. future version specification, design may revisited. Contained Resource Metadata Container description limited containment triples. support client navigation application interaction, server include contained resource part container description, described below. Servers include part container description, unless information inapplicable server. Contained resource metadata statement include properties: rdf:type class whose URI expansion URI Template [] http://www.w3.org/ns/iana/media-types/{+iana-media-type}#Resource, iana-media-type corresponds value IANA Media Types []. stat:size non-negative integer giving size resource bytes. dcterms:modified date time resource wa last modified. stat:mtime Unix time resource wa last modified. dcterms:modified value contained resource corresponds Last-Modified header value contained resource. one perform HEAD GET request URI contained resource time HTTP message generation, response 200 status code including Last-Modified header would indicate date time. Note: Contained Resource Metadata Considerations generation contained resource metadata may inapplicable servers, example, information doe exist expensive determine. Contained resource metadata . [] [] [] Auxiliary Resources Solid ha notion auxiliary resource provide supplementary information descriptive metadata, authorization conditions, data shape constraints, digital right provenance record given resource (hereafter referred subject resource), affect resource others associated processed, served interpreted. Servers MUST support auxiliary resource defined specification manage association subject resource auxiliary resources. subject resource deleted auxiliary resource also deleted server (). Auxiliary resource represented RDF document []. HTTP interaction auxiliary resource subject requirement per . Note: Self-describing Resources applicable, promote , implementation author encouraged use subject resource instead associated auxiliary resource. Note: URI Origin resource associated auxiliary resource different origin []. specification defines following type auxiliary resources: Servers MUST advertise auxiliary resource associated subject resource responding HEAD GET request including HTTP Link header rel parameter []. Clients discover auxiliary resource associated subject resource making HTTP HEAD GET request target URL, checking HTTP Link header rel parameter []. Auxiliary Type Link Relation Definitions acl [] describedby [] Web Access Control auxiliary resource type Web Access Control provides access control description subject resource (). Description Resource auxiliary resource type Description Resource provides description subject resource. Servers MUST directly associate one description resource subject resource. HTTP request target description resource, server MUST apply authorization rule used subject resource description resource associated. Clients discover resource described description resource making HTTP HEAD GET request target URL, checking HTTP Link header rel value describes (inverse describedby relation) []. Reading Writing Resources Servers MUST respond 405 status code request using HTTP method supported target resource. [] Resource Type Heuristics creating new resources, server determine effective request URIs type examining URI path ending (). successful PUT PATCH request creates resource, server MUST use effective request URI assign URI resource. successful POST request creates resource, server MUST assign URI resource. Servers MAY allow client suggest URI resource created POST, using HTTP Slug header defined []. Note: URI Allocation Clients use PUT PATCH request assign URI resource. Clients use POST request server assign URI resource. [][]. Reading Resources Servers MUST support HTTP GET, HEAD OPTIONS method [] client read resource determine communication options. [] Servers MUST indicate HTTP method supported target resource generating Allow header field successful responses. responding authorized requests, server MUST indicate supported medium type HTTP Accept-Patch [], Accept-Post [] Accept-Put [] response header correspond acceptable HTTP method listed Allow header value response HTTP GET, HEAD OPTIONS requests. [] [] [] Writing Resources Servers MUST support HTTP PUT, POST PATCH method []. [] [] Servers MUST create intermediate container include corresponding containment triple container representation derived URI path component PUT PATCH requests. [] Servers MUST allow creating new resource POST request URI path ending /. Servers MUST create resource URI path ending /{id} container /. Servers MUST create container URI path ending /{id}/ container / request including HTTP Link header rel="type" targeting valid LDP container type. [] [] POST method request target resource without existing representation, server MUST respond 404 status code. [] PUT PATCH method request target auxiliary resource, server MUST create update it. POST method request Slug header target auxiliary resource, server MUST respond 403 status code response body describing error. [] Servers MUST allow HTTP PUT PATCH container update containment triples; server receives request, MUST respond 409 status code. [] Servers MUST allow HTTP POST, PUT PATCH update container ; server receives request, MUST respond 409 status code. [] Note: Conditional Update Clients encouraged use HTTP If-None-Match header value "*" prevent unsafe request method, e.g., PUT, PATCH, inadvertently modifying existing representation target resource client belief resource doe current representation. [] [] [] Servers MAY use HTTP ETag header strong validator RDF bearing representation order encourage client opt-in using If-Match header requests. Modifying Resources Using N3 Patches Servers MUST accept PATCH request N3 Patch body target request RDF document []. Servers MUST indicate support N3 Patch listing text/n3 value Accept-Patch header [] relevant responses. [] N3 Patch document Notation3 (N3) format [], identified medium type text/n3, conforming following constraints: patch document MUST contain one patch resources. patch resource MUST identified URI blank node, refer ?patch remainder section. patch resource MAY contain triple [] ?patch rdf:type solid:Patch. patch resource MUST contain one triple form ?patch solid:deletes ?deletions. patch resource MUST contain one triple form ?patch solid:inserts ?insertions. patch resource MUST contain one triple form ?patch solid:where ?conditions. present, ?deletions, ?insertions, ?conditions MUST non-nested cited formula [] consisting triple and/or triple pattern []. present, presumed empty formula {}. specification might provide structure interpretation wider class N3 Patch documents, present specification governs application N3 Patch document additionally adhere following constraints: patch document MUST contain exactly one patch resource, identified one triple pattern described above, share ?patch subject. patch resource MUST contain triple ?patch rdf:type solid:InsertDeletePatch. ?insertions ?deletions formula MUST contain variable occur ?conditions formula. ?insertions ?deletions formula MUST contain blank nodes. Servers MUST respond 422 status code [] patch document doe satisfy constraints. ?conditions non-empty, server MUST treat request . ?insertions non-empty, server MUST (also) treat request . ?deletions non-empty, server MUST treat request . Servers MUST process patch resource target document follows: Start RDF dataset target document, empty RDF dataset target resource doe exist yet. ?conditions non-empty, find (possibly empty) variable mapping resulting triple occur dataset. mapping exists, multiple mapping exist, server MUST respond 409 status code. [] resulting variable mapping propagated ?deletions ?insertions formula obtain two set resulting triples. set triple resulting ?deletions non-empty dataset doe contain triples, server MUST respond 409 status code. [] triple resulting ?deletions removed RDF dataset. triple resulting ?insertions added RDF dataset, blank node ?insertions resulting newly created blank node. combination deletion followed insertion form new resource state RDF document, server responds appropriate status code. Example: Applying N3 patch. @prefix solid: <http://www.w3.org/ns/solid/terms#>. @prefix ex: <http://www.example.org/terms#>. _:rename solid:InsertDeletePatch; solid:where { ?person ex:familyName "Garcia". }; solid:inserts { ?person ex:givenName "Alex". }; solid:deletes { ?person ex:givenName "Claudia". }. N3 Patch instructs rename Claudia Garcia Alex Garcia, condition Garcia family member present target RDF document. Deleting Resources Servers MUST support HTTP DELETE method []. [] [] DELETE request target storage root container associated ACL resource, server MUST respond 405 status code. Server MUST exclude DELETE method HTTP response header Allow response request resource []. [] contained resource deleted, server MUST also remove corresponding containment triple. [] contained resource deleted, server MUST also delete associated auxiliary resource (see section). DELETE request target container, server MUST delete container contains resources. container contains resources, server MUST respond 409 status code response body describing error. [] section non-normative. server might perform additional actions, described normative reference like []. example, server could perform additional cleanup task resource know longer referenced accessed period time, on. Subsequent GET request deleted resource usually result 404 410 status code, although HTTP allows others. [] [] Resource Representations server creates resource HTTP PUT, POST PATCH request request representation data encodes RDF document [] (as determined Content-Type header), server MUST accept GET request resource value Accept header request representation text/turtle application/ld+json [] []. [] ] [] [] PUT, POST, PATCH DELETE method request target representation URL different resource URL, server MUST respond 307 308 status code Location header specifying preferred URI reference. [] Constraints Problem Details section non-normative. Servers encouraged publish constraint client ability create update resource adding Link header appropriate context URI, link relation http://www.w3.org/ns/ldp#constrainedBy, target URI identifying set constraint [], response request fail due violation constraints. Link header provided responses. Servers encouraged use URIs constraint defined specification constraint URIs within authority depending request's semantics target resource. Constraints intended protected persistent resource therefore cannot modified clients. facilitate better client interactions, encouraged express constraint RDF. [] Linked Data Notifications Solid server MUST conform LDN specification implementing Receiver part receive notification make Inbox content available []. Solid client MUST conform LDN specification implementing Sender Consumer part discover location resource Inbox, send notification Inbox retrieve content Inbox []. Live Update Solid Notifications Protocol Entities Solid ecosystem use communicate change affecting resource. Servers MUST conform [] implementing enable client discover subscription resource notification channel available given resource storage. Servers MUST conform [] implementing process produce instruction subscription requests. Servers MUST conform [] implementing produce send message . Servers MUST conform [] implementing receive process message conform notification channel type. following non-normative. Solid WebSockets API (Unofficial Draft) [] ha common notification protocol many years. draft doe include authentication mechanism, therefore Protocol ha transitioned require . Existing client server implementation begin providing support new notification protocol supporting backwards compatibility, appropriate. Cross-Origin Resource Sharing typically access data multiple sources. However, Web browser default prevent apps run one origin accessing data origins. cross-origin protection security mechanism ensures malicious website cannot simply read profile banking detail websites. However, reasonable default pose problem even benevolent Solid apps, might good reason access data different places. instance, Solid app https://app.example/ would prevented accessing data https://guinan.example/ https://darmok.example/, even Guinan Darmok given user app permission see data. case origin access protection mechanism browser built-in cross-origin protection actually obstacle rather feature. all, storage already ensure access control certain document accessed specific people applications. Preventively blocking apps different origin thus introduces unnecessary barrier. Fortunately, Web server indicate browser certain document require cross-origin protection. mechanism selectively disable protection called Cross-Origin Resource Sharing CORS []. responding browser request specific combination HTTP headers, server indicate action allowed given resource. Solid, goal allow action CORS level, deeper layer exert full control apps allowed permissions. next section describes achieve right HTTP header configuration. CORS Server server MUST implement CORS protocol [] that, extent possible, browser allows Solid apps send request combination request header server, Solid app read response response header received server. server wish block access resource, MUST happen via CORS MUST instead communicated Solid app browser HTTP status code 401, 403, 404 []. Note: CORS Protocol Blocking Since CORS protocol part Living Standard, might changed point, might necessitate change server implementation continued prevention undesired blocking. mitigate ha suggested. Concretely, whenever server receives HTTP request containing valid Origin header [], server MUST respond appropriate Access-Control-* header specified CORS protocol []. particular, server MUST set Access-Control-Allow-Origin header valid Origin value request list Origin Vary header value. server MUST make used response header readable Solid app Access-Control-Expose-Headers (with possible exception Access-Control-* header themselves). server MUST also support HTTP OPTIONS method [] respond appropriately CORS preflight requests. Careful attention warranted, especially many edge cases. instance, server explicitly enumerate used response header Access-Control-Expose-Headers rather resorting *, doe cover case (such credential mode set include). Servers also explicitly list Accept Access-Control-Allow-Headers, value longer 128 character (not uncommon RDF-based Solid apps) would otherwise blocked, despite shorter Accept header allowed without explicit mention. Identity WebID WebID HTTP URI denoting agent, example person, organisation, software []. WebID dereferenced, server provides representation WebID Profile RDF document [] uniquely describes agent denoted WebID. WebIDs underpinning component Solid ecosystem used primary identifier user applications. Authentication Solid-OIDC Solid OpenID Connect (Solid OIDC) specification defines resource server verify identity relying party end user based authentication performed OpenID provider []. WebID-TLS section non-normative. Solid ecosystem initially relied WebID-TLS authenticated resource access . current recommendation authentication relies Solid-OIDC (). Implementations use WebID-TLS mechanism additional authentication method. Authorization Servers MUST conform either Web Access Control [] Access Control Policy [] specifications. Web Access Control Web Access Control (WAC) decentralized cross-domain access control system providing way Linked Data system set authorization condition HTTP resource using Access Control List (ACL) model. Server manages association resource ACL resource , applies authorization condition requested operations. Authorizations described using express determine access privilege requested resource. Applications discover authorization rule associated given resource, control rules, directed agent. Clients MUST conform Web Access Control specification []. [] [] ] ] Access Control Policy Access Control Policy (ACP) language describing, controlling, granting access resources. Authorizations described using express determine access privilege requested resource. Clients MUST conform Access Control Policy specification []. [] HTTP Definitions HTTP Headers Accept-Put Response Header specification introduces new HTTP response header Accept-Put used specify document format accepted server HTTP PUT requests. modelled Accept-Patch header defined [] Accept-Post header defined []. syntax Accept-Put, using ABNF syntax defined Section 1.2 [], is: Accept-Put = "Accept-Put" ":" # media-range Accept-Put header specifies comma-separated list medium range (with optional parameters) defined [], Section 5.3.2. Accept-Put header, effect, us syntax HTTP Accept header minus optional accept-params BNF production, since latter doe apply Accept-Put. presence Accept-Put header response method implicit indication PUT allowed resource identified request URI. presence specific document format header indicates specific format allowed PUT request resource identified request URI. IANA Registration Template: Accept-Put response header must added permanent registry (see []). Header field name Accept-Put Applicable Protocol HTTP Author/Change controller W3C Solid Community Group Specification document specification Considerations section detail security, privacy, accessibility internationalization considerations. normative reference specification point document Living Standard Draft status, meaning content still change time. advised monitor documents, change might implications. Security Considerations section non-normative. section attempt highlight set security considerations, complete list. Implementers urged seek advice security professional implementing mission critical system using technology outlined specification. Implementations subject security consideration found HTTP/1.1 [] []. Servers strongly discouraged assuming HTTP request header field-values valid non-malicious. Servers strongly encouraged sanitize request processing incorporating message sent others. Servers encouraged reject bad request conflict specification's normative requirements. Servers encouraged restrict untrusted requests. Servers encouraged apply normalization canonicalization algorithm applicable. Servers encouraged take measure mitigate potential timing attack attempting discover resource existence even requesting agent ha access resource(s). Servers strongly discouraged exposing information beyond minimum amount necessary enable feature. Servers strongly discouraged assuming user agent regular Web browser, even request contain familiar value header User-Agent Origin. assumption could lead incorrect conclusion security model application making request, since request might actually come non-browser actor unaffected browser security constraints. Servers browser resource access governed explicitly component. such, server cannot rely browser-based cross-origin protection mechanism determining authentication status representation resource. particular, server strongly encouraged ignore HTTP cooky untrusted origins. Additional security measure taken prevent metadata error response leaking. instance, malicious application could probe multiple server check whether response status code 401 403, could try access error page intranet server within user agent private network extract company name data. mitigate this, request untrusted Origin arrives, server may want set status code error response 404 and/or anonymize censor contents. Servers encouraged use TLS connection protect content request response eavesdropping modification third parties. Unsecured TCP connection without TLS may used testing environment server behind reverse proxy terminates secure connection. Privacy Considerations section non-normative. Privacy one ethical value underpin web. empower people need strong privacy protection respect information flows, implementers well developer specification Solid ecosystem encouraged consider privacy-related design choice per W3C []. Servers encouraged use authorization technique prevent unwanted access resources, rather depending relative obscurity resource names. Identifiable Information order prevent leakage non-resource data, server strongly discouraged including identifiable information error responses. Accessibility Considerations section non-normative. acknowledge diversity people using Web, anyone may create use information. aim inclusive design wide range people abilities. section detail general accessibility consideration take account Web content accessibility, accessible applications, authoring tools, accessible user agent us specification. Web Content Accessibility: implementation Web standard protocol, ignoring accessibility issue make information unusable large subset population. strongly encouraged follow accessibility guideline standards, [] cover array recommendation make content accessible wider range people regardless disability, limitation, sensitivity. also strongly encouraged follow guidance []. Accessible Applications: help assistive technology provide consistent user interface understanding objects, strongly encouraged follow [] recommendations. enable semantic navigation, styling interactive feature context digital publishing, encouraged follow []. support structured graphic charts, graphs, technical drawing scientific diagrams, assistive technology order improve accessibility graphic diagram detailed annotations, encouraged follow []. Authoring Tool Accessibility: contribute proliferation Web content accessible broad range people, strongly encouraged follow [] design authoring tool support production accessible content accessible user interfaces. User Agent Accessibility Guidelines: support general principle development accessible user agents, i.e., software retrieves, render facilitates end-user interaction web content, strongly encouraged follow []. Internationalization Considerations section non-normative. Adaptability content software need target audience help towards accessibility. mechanism cater information interface people culture, region, language preference participate better. Towards end, strongly encouraged apply recommendation best practice W3C . example, content author can: include link navigate different language content; declare base language document, indicate multiple language directional flow help translations; use Unicode character encoding, e.g., UTF-8, data form text ensure correct effects; check minimise inappropriate cultural bias, improve translatability; restrict markup use structure semantics. Security Privacy Review section non-normative. question provide overview security privacy consideration specification guided []. known security impact feature specification. Yes. Access resource granted authorized agents. HTTP request payload contain data including identifies refers user application. personal data application include extended client server. feature require obtaining exposing sensitive information. No. No. No. Resources described within framework HTTP, kind resource required RDF documents. Servers might able redirect resources, e.g., https: URLs file:, data:, blob: URLs, behaviour defined specification. No. detail another origin state exposed. association resource auxiliary resource discretion server, different origin (). server participates [], HTTP request different origin may allowed. feature doe add new attack surface beyond normal , extra mitigation deemed necessary. No. No. No. None. Inapplicable. different browser 'normal' state. Yes, . No. Inapplicable. Societal Impact Review section non-normative. question provide overview ethical consideration societal impact guided []. .. .. .. .. .. .. .. .. .. .. Yes, . Change Log section non-normative. summary editorial substantive change section based W3C Process Document []. Changes protocol-20211217 version Amend language, document details, markup. Add . Update . Change requirement server including Accept-* header . Add requirement server . Constrain server requirement successful responses. Update current copyright year. Add advisement . Add requirement storage description: , , . Add requirement . Remove term data pod add definition . Add . Add consideration restricting untrusted requests. Update add , , , . Update . Add requirement . References Normative References [ACP] . Matthieu Bosquet. W3C Solid Community Group. 18 May 2022. Version 0.9.0. URL: [DC-TERMS] . DCMI Usage Board. DCMI. 11 October 2010. DCMI Recommendation. URL: [FETCH] . Anne van Kesteren. WHATWG. Living Standard. URL: [IANA-MEDIA-TYPES] . IANA. URL: [JSON-LD11] . Gregg Kellogg; Pierre-Antoine Champin; Dave Longley. W3C. 16 July 2020. W3C Recommendation. URL: [LDN] . Sarven Capadisli; Amy Guy. W3C. 2 May 2017. W3C Recommendation. URL: [LDP] . Steve Speicher; John Arwe; Ashok Malhotra. W3C. 26 February 2015. W3C Recommendation. URL: [N3] . Drthe Arndt; William Van Woensel;Dominik Tomaszuk; Gregg Kellogg. W3C. 5 September 2021. Draft Community Group Report. URL: [POWDER-DR] . Phil Archer; Kevin Smith; Andrea Perego. W3C. 1 September 2009. W3C Recommendation. URL: [RDF-SCHEMA] . Dan Brickley; Ramanathan Guha. W3C. 25 February 2014. W3C Recommendation. URL: [RDF11-CONCEPTS] . Richard Cyganiak; David Wood; Markus Lanthaler. W3C. 25 February 2014. W3C Recommendation. URL: [RFC2119] . S. Bradner. IETF. March 1997. Best Current Practice. URL: [RFC3864] . G. Klyne; M. Nottingham; J. Mogul. IETF. September 2004. Best Current Practice. URL: [RFC3986] . T. Berners-Lee; R. Fielding; L. Masinter. IETF. January 2005. Internet Standard. URL: [RFC4918] . L. Dusseault, Ed. IETF. June 2007. Proposed Standard. URL: [RFC5023] . J. Gregorio, Ed.; B. de hOra, Ed.. IETF. October 2007. Proposed Standard. URL: [RFC5789] . L. Dusseault; J. Snell. IETF. March 2010. Proposed Standard. URL: [RFC6454] . A. Barth. IETF. December 2011. Proposed Standard. URL: [RFC6455] . I. Fette; A. Melnikov. IETF. December 2011. Proposed Standard. URL: [RFC6570]. J. Gregorio; R. Fielding; M. Hadley; M. Nottingham; D. Orchard. IETF. March 2012. Proposed Standard. URL: [RFC6892] . E. Wilde. IETF. March 2013. Informational. URL: [RFC7230] . R. Fielding, Ed.; J. Reschke, Ed.. IETF. June 2014. Proposed Standard. URL: [RFC7231] . R. Fielding, Ed.; J. Reschke, Ed.. IETF. June 2014. Proposed Standard. URL: [RFC7232] . R. Fielding, Ed.; J. Reschke, Ed.. IETF. June 2014. Proposed Standard. URL: [RFC7233] . R. Fielding, Ed.; Y. Lafon, Ed.; J. Reschke, Ed.. IETF. June 2014. Proposed Standard. URL: [RFC7234] . R. Fielding, Ed.; M. Nottingham, Ed.; J. Reschke, Ed.. IETF. June 2014. Proposed Standard. URL: [RFC7235] . R. Fielding, Ed.; J. Reschke, Ed.. IETF. June 2014. Proposed Standard. URL: [RFC7540] . M. Belshe; R. Peon; M. Thomson, Ed.. IETF. May 2015. Proposed Standard. URL: [RFC8174] . B. Leiba. IETF. May 2017. Best Current Practice. URL: [RFC8288] . M. Nottingham. IETF. October 2017. Proposed Standard. URL: [SOLID-NOTIFICATIONS-PROTOCOL] . Sarven Capadisli. W3C Solid Community Group. 31 December 2022. Version 0.2.0. URL: [SOLID-OIDC] . Aaron Coburn; elf Pavlik; Dmitri Zagidulin. W3C Solid Community Group. 28 March 2022. Version 0.1.0. URL: [SPARQL11-QUERY] . Steve Harris; Andy Seaborne; Eric Prud'hommeaux. W3C. 21 March 2013. W3C Recommendation. URL: [Turtle] . Eric Prud'hommeaux; Gavin Carothers. W3C. 25 February 2014. W3C Recommendation. URL: [W3C-HTML] . W3C. 28 January 2021. W3C Recommendation. URL: [WAC] . Sarven Capadisli. W3C Solid Community Group. 5 July 2022. Version 1.0.0-cr-1. URL: [WEBARCH] . Ian Jacobs; Norman Walsh. W3C. 15 December 2004. W3C Recommendation. URL: [WEBID] . Andrei Sambra; Stphane Corlosquet. W3C WebID Community Group. 5 March 2014. W3C Editors Draft. URL: Informative References [ATAG20] . Jan Richards; Jeanne F Spellman; Jutta Treviranus. W3C. 24 September 2015. W3C Recommendation. URL: [COGA-USABLE] . Lisa Seeman-Horwitz; Rachael Bradley Montgomery; Steve Lee; Ruoxi Ran. W3C. 11 December 2020. W3C Working Draft. URL: [DPUB-ARIA-1.0] . Matt Garrish; Tzviya Siegman; Markus Gylling; Shane McCarron. W3C. 14 December 2017. W3C Recommendation. URL: [GRAPHICS-ARIA-1.0] . Amelia Bellamy-Royds; Joanmarie Diggs; Michael Cooper. W3C. 2 October 2018. W3C Recommendation. URL: [PRIVACY-PRINCIPLES] . Robin Berjon; Jeffrey Yasskin. W3C. 12 May 2022. W3C Group Draft Note. URL: [SECURITY-PRIVACY-QUESTIONNAIRE] . Theresa O'Connor; Peter Snyder. W3C. 23 March 2021. W3C Note. URL: [SOCIETAL-IMPACT-QUESTIONNAIRE] . Amy Guy. W3C. 13 Dec 2021. W3C Draft TAG Finding. URL: [SOLID-WEBSOCKETS-API] . Nicola Greco; Dmitri Zagidulin; Ruben Verborgh. W3C Solid Community Group. 17 June 2020. Unofficial Draft. URL: [UAAG20] . James Allan; Greg Lowney; Kimberly Patch; Jeanne F Spellman. W3C. 15 December 2015. W3C Note. URL: [WAI-ARIA-1.2] . Joanmarie Diggs; James Nurthen; Michael Cooper. W3C. 2 March 2021. W3C Candidate Recommendation. URL: [WCAG-3.0] . Jeanne F Spellman; Rachael Bradley Montgomery; Shawn Lauriat; Michael Cooper. W3C. 21 January 2021. W3C Working Draft. URL: [ETHICAL-WEB-PRINCIPLES] . Daniel Appelquist; Hadley Beeman; Amy Guy. W3C. 12 May 2022. W3C Group Draft Note. URL: [W3C-PROCESS] . Elika J. Etemad / fantasai; Florian Rivoal; W3C Process Community Group. 2 November 2021. URL: [WEBID-TLS] . Henry Story; Stphane Corlosquet; Andrei Sambra. W3C WebID Community Group. W3C Editor's Draft. URL: Developers Users Community Solid team help coordinate standardisation work support implementing using Solid. read open suggestion around improve sending email . Sir Tim Berners-Lee Solid Director Sir Tim Berners-Lee co-founder Chief Technology Officer Inrupt. Named one Time Magazines 100 Important People 20th Century, Tim invented web CERN 1989. Founder Director World Wide Web Consortium (W3C), international standard forum technical development Web, Web Foundation whose mission World Wide Web serf Humanity. co-founded President Open Data Institute London. Tim Professor Massachusetts Institute Technology (MIT) Computer Science AI Lab (CSAIL). April 2017, Sir Tim wa awarded Turing Prize considered Nobel Prize Computing. Editors Editors responsible maintaining reviewing suggestion Solid specification. Sarven Capadisli Solid Editor contributes advancement technical specification Solid ecosystem aim ensure open consensus within common ethical framework. involved evolution Solid alongside TimBL MIT since 2015. Ruben Verborgh Solid Editor focus ecosystem architecture developer experience. Justin Bingham Solid Editor Justin Bingham co-founder Chief Technology Officer Janeiro Digital, team apply Solid solve large-scale problem across world. closely involved evolution Solid ecosystem, including data interoperability patterns, secure data boundaries, developer tooling, frictionless end user experience. Dmitri Zagidulin Solid Editor Dmitri Senior Consulting Software Engineer Digital Bazaar co-founder Ro Network. also Co-Co-Chair Secure Data Storage Working Group Decentralised Identity Foundation. wa part MIT Solid project. Kjetil Kjernsmo Solid Editor Kjetil Senior Advisor Norwegian Agency Development Cooperation, work technical expert normative technology Digital Public Goods. ha PhD Informatics University Oslo Norway ha 25 year experience social semantic web technology. Creators Creators responsible maintaining reviewing suggestion solidproject.org includes Solid content newsletter Month Solid. Kay Kim Creator Kay technical writer Inrupt newcomer Solid. Kyra Assaad Creator Kyra Assaad Product Designer Inrupt. work ensure Solid user experience accessible useable all. Passionate increasing representation participation women, people colour under-represented group Solid community, helped form serf one chair Solid Diversity, Equity, Inclusion (DEI) team. Virginia Balseiro Creator web developer co-chair Solid Community Group. ha actively involved Solid Project since 2020. founder Women Solid group member Solid Team, advocate openness, transparency, inclusion, positive collaboration within Solid community. also contributes development standardization Solid Technical Reports guideline editor. Vincent Tunru Creator Vincent Tunru front-end engineer. ha worked Inrupt, worked finding technology help ensuring open access academic research. focusing technical writing app developer learn build Solid apps. Ted Thibodeau Creator , @TallTed, Technical Evangelist , employed since December 2000. working internal external user including , , , , , others, ha also contributing number Identity-, RDF-, RWW-, Linked Data-focused related projects, including , , , , , several others. Jeff Zucker Creator Jeff Zucker ha developed software led project UNICEF, UNESCO, New York City Department Ageing, Columbia University, not-for-profit agency internationally Oregon, USA. published author book article multi-cultural education, adult literacy, relationship technology society well number open source software packages. Timea Turdean Creator Software Engineer Inrupt part . Administrators Administrators responsible administration tools, systems, service used advancing Solid. Tim Berners-Lee Administrator Sir Tim Berners-Lee co-founder Chief Technology Officer Inrupt. Jackson Morgan Administrator Jackson Morgan freelance Solid developer Justin Bingham Administrator Justin Bingham co-founder Chief Technology Officer Janeiro Digital Alain Bourgeoa Administrator maintainer work several team . What's New Developers Users Community Got question thats here? Try asking . Definitions exactly personal data? Personal data personal. refers data set describing person ranging physical attribute preference behaviour. Personal data legal concept, technical concept, utilised jurisdictions. details... Examples personal data include: location, genome data, written communication, spoken communication, list contacts, internet browsing habits, financial transactions, supermarket spending, tax payments, criminal record, laptop mobile phone camera lens recording, device microphone recordings, driving habit via car trackers, mobile health records, fitness activity, nutrition, substance use, heartbeat, sleep pattern vital signs. Europe "any information relating identified identifiable natural person (data subject); identifiable natural person one identified, directly indirectly, particular reference identifier name, identification number, location data, online identifier one factor specific physical, physiological, genetic, mental, economic, cultural social identity natural person;" interoperability? According , interoperability quality able used together. example, use Solid app, store data apps Pods interoperable. Also, able reuse data one Solid calendar app another apps interoperable. Pod? Pod data stored Web Solid. (). user may store data one Pod several Pods, application read write data Pod depending authorisation granted user user associated Pod. WebID? WebID unique identifier used identify specific user. example WebID could look like is: https://fulano.pod.provider/profile/card#me. share data third party, user associate sharing preference WebID third party. Dont worry though: . details... WebID dereferenced profile document serialized . Solid, WebIDs used identify Agents i.e. people organisation well manage access right though . Pods different WebIDs? two different things: , . provided two potentially distinct entities: Pod Provider host Pods Identity Provider allows one account (identified WebID) log multiple apps. log Solid apps and/or access data Pods, provide WebID login Identity Provider, like Sign Google today. possible company organisation Pod Provider Identity Provider although distinct separable service compatible Pod Providers Identity Providers (which mean free choose provider suit most). details... Identity Provider implement identification protocol (e.g. ), allows prove WebID. Pod Provider delivers storage space one domains, usually (but necessarily) pointed <webID> solid:storage <pod> statement included profile document associated WebID. Web Standards doe Solid relate Web standards? Solid doe reinvent wheel. use Solid still able access data using Web browser computer. Solid still web, thing added assumption overturned (). Solid adds: identification system instead sign everything Google Facebook sign favourite Solid provider wont tracked. Ubiquitous sharing control share anything anybody matter social medium happen part of. sort personal cloud storage USB storage sky called Pod. Solid overturn assumptions: start Solid app, instead app storing data itself, store Pod. use app, choose app use, choose Pod use app. detail Solid built top existing Web standards. core Solid specification relies (, based vocabularies. Solid also us subset UPDATE HTTP PATCH queries. Identification Solid based and/or . Storage Solid user expected setup server self-host? No. Self-hosting mean data would sit home physical hard drive server. Self-hosting possible essential using Solid, currently requires technical knowledge. Solid user rely Identity Provider Pod Provider, expected particular expertise. also possible self-host become small Identity Provider Pod Provider, provide Solid family, association, friend detail Solid standard open implementation meaning anyone self-host Identity Pod Identity Pod group users. data exist one Pod? Yes, data point exist one Pod. choose one Pod deliberately, example work home, case, data may relevant settings. also choose single Pod give selective access. data relevant multiple user may replicated slightly different way another person Pod. example, conversation someone data may stored Pod Pod person spoke with. possible use Solid offline (at least partially)? Eventually, yes. Solid long term vision includes local first flexibility different topology patch-passing sync networks. However, implementation yet. want leave Pod provider, take data me? Yes, unless Pod provider doesnt allow to. best way understand service particular Pod provider read Terms. support tool like help understand small print easily. detail data Solid Pods structured according Linked Data principle application writing first place. Therefore, Pod Provider completely neutral regarding Pod content, data structure supported Pod Provider. storage technology picked Pod Provider . using Solid, data stored? depends Pod Provider. user point view, data stored important accessed controlled. matter Pod Provider is, order Solid compliant, ha expose data way: resource folders. However,the implementors standard free pick underlying technology according purpose constraints. performance may vary one Pod Provider another. detail standard, Solid describes interaction model system must compliant with. Pod Provider expose REST read-write interface clients, storage technology irrelevant, Web-based systems. interface bind storage specific Pod Provider. Identification Solid help store data organisation, individual? Yes. WebID doe necessarily identify single physical person: organisation company get WebID. generally, WebID may used identify family, team, group people. Since right Pod attached WebIDs, Solid Pods store data use case procedure. signed two profile locations, difference two? Solid specification implemented variety identity providers, Pod providers, apps. allows use service variety provider take data along switch i.e. compatible. find difference service provider looking respective website term conditions. two WebIDs two different identity provider identity provider much like two email addresses. WebIDs unrelated other, different data sharing preference attached them, e.g. one allowed access company documents, health record. join Solid, stop using want? Yes. leave Solid, need to: Delete Pod(s) Delete WebID Pod Provider may offer procedure delete Pods, mean closing storage space rented you. Pods deleted, delete WebID closing account Identity Provider. Pod Providers, exact procedure may differ Identity Provider other. Remember need log Identity Provider access Pods: delete Identity Provider account first, may lock Pods. detail Technically, may host profile independently Identity Provider, point WebID control. case, fully delete Solid identity, may want delete profile document well. Business Model Pod provider get paid? who? determined market. likely several business model emerge, user pay storage, funded advertising instance, like current Web platforms. However, Solid, term Pod Provider change, want switch advertising-free Provider, conveniently without losing data, contact chat history. everyone used Solid would lose favourite internet services? No. Search engine communication tool need track work. Hopefully time nice thing get silo dont let determine data sharing preference echoed new solid-compatible one do. Bigger Picture Doesnt Data Transfer Project fix data concerns? great start. next step build healthy array option user make data work themselves. integrate iOS Android apps Solid? possible developer take iOS Android app make Solid compatible following standard supporting documentation. detail Currently developer kit development Android iOS. really want app installed Android iOS, might consider writing progressive web app writing hybrid app. Arguably Semantic Web Linked Data never took off, Solid working it? principle technology always meant make data reusable, make data independent applications, core Solid. detail Semantic Web Linked Data technology centered question interoperability. using technologies, data provided context made reusable. order achieve one goal Solid enable application share reuse data without control it, kind interoperability key, Semantic Web Linked Data principle technology seemed fittest purpose. Solid use blockchain? No. Solid blockchain technology, interact use blockchain initiatives. Security Solid mean wont need many passwords? Yes. use Solid, need login Identity Provider. use application interact Pod without logging individually, (in opinion) simpler create account every service. However, still manage data would like share application. data Pod safe? Pod encrypted stored provider system? depends Pod Provider. Pod provider Solid compliant without encrypting data stored Pod provider system. encryption important you, use Pod provider doe encrypt data. Solid standard describes rule controlling access data, encryption dependant storage system, controlled Pod Provider. data safe use Solid application? depends app. data always encrypted transit Pod app vice versa. always conscious apps using term apps. Solid allows selectively share data specific applications. data Pod one physical place? Data Pod stored choose Pod be. either store Pod Pod provider chose self-host. data single Pod centrally stored place. data one place, doe become vulnerable target hackers? data necessarily one place, since store piece data across several Pods. come malicious cyber attacks, attack single source many people data generally likely individual level. Solid prevent 3rd party replicating data legitimate access ? No. Solid, user grant permission third-party apps access data his/her Pod. said application ha read access data, cannot prevent duplicating (which cannot current application either). change control exactly information app ha access to, revoke access time. happens access right revoked . revoke access application data, still hold copy data previously accessed? Solid cannot delete data already sent out. soon start using Solid, able deliberate data sharing preference point onwards. revoke access application data point time, application previously duplicated data right access, copy destroyed. However, application longer able update copy according modification make Pod. detail would like ask data deleted services, Europe law called make possible European citizen ask data deleted. find template letter instruction exercise right . Apps data today. move data Solid, still copy ? Yes. Today, people organisation copy data, may not. join Solid move data there, doe prevent apps already data keep copy. However, apps ask authorization access new data store Solid. Could Solid technology tool trace control criminal actions? law determines remit government track control criminal action. user choice store Pod would determine jurisdiction oversight data Pod. Expect user based Europe, case General Data Protection Regulation applies regardless Pod stored. Pod provider legally responsible data storing? Pod provider commitment individual legal entity provide service based law country hosting provider operating. Pod provider seek professional advice compliant. individual Solid user, carefully read agreement hosting provider agreeing. Could Solid become another tech giant monopoly? No. Solid company, open standard. Could dominate technical landscape, adopted many? Yes, would ideal, would one interoperable Solid web, many. However, compliant Solid doe require developer ask permission anyone building applications, doe prevent user choosing apps want, share data see fit. sense, Solid cannot become monopoly, way Web considered tech monopoly. Could Solid app Pod become another tech giant monopoly? No. Although app Pod could become popular, Solid, always possible user leave another competitor app Pod. People want different thing unlikely one size fit all. opt-in opt-out share data using Solid? Opt-in. default share data. give active consent share data. dont want share data all? Solid make sure minimum amount data shared still providing services. service need know something able function, example, send product company need know send product to. dont want share data services, may able use them. Due nature access control Solid, dont want allow app access piece data Pod, that. dont want certain app read data Pod, give access right. However, would still allowed read public data Pod (if available). control data child using Solid? child. parent guardian child responsible managing data sharing preference child reach legal age consent country location. use Solid, control data die? decide based agreement hosting provider app using. need Solid already law data protection? Data protection law nutshell tend promote transparency around data use insist informed explicit consent user. Solid provides tool make possible. Isnt free Web service good exchange giving access data? Thats you, Solid give choice. wise trust people make ethical decision complicated issue? lot variation people feel right wrong, ultimately decide data. Solid doe try help make informed choice providing relevant information constantly validating accuracy information. apps vulnerable Origin bypass? Solid specification trusted apps feature new experimental, known ha common weakness () origin validation. Currently user give Solid web app access Pod, app Origin added user list trusted apps. app receives token allows interact Pod behalf user, Origin included interaction verified using list trusted apps. Although standard browser automatically include Origin send HTTPS requests, non-browser client required send one. mean anyone access aforementioned Origin-based token use non-browser client bypass Origin validation Pod. Solutions already planned revise replace experimental use Origin, order evolve security trusted app feature. What's New Developers Users Community Terms Use URI Persistence Policy Last modified: 2021-01-25 information made available Web, important integrity Web, society based upon it, URIs used reference information used well future, information persist identified. end, Solid Project host make following pledge: far able, resource solidproject.org Web site declared (see below) persistent. Pledge: host ensure persistent resource continue available throughout life Solid Project; persistent resource modified, change history archived though archive necessarily available publicly; Solid Project disbanded, Web site granted right make copy (at different URI) public persistent resource long modified preserved entirety made available free charge, provided persistence policy applied historical mirrors. event, original https://solidproject.org web site handed management another organization organization pledge policy one considered persistent. note, persistent resource include: home page https://solidproject.org/; start https://solidproject.org/ immediately followed four decimal digits; start https://solidproject.org/TR/ immediately followed four decimal digits. representation made persistence policy information site. intent set example reducing failure link due clumsy management inadequate commitment information persistence, provide stable reference base information Solid-related topic service community. Solid Project 2021-01-25 What's New Developers Users Community Developer Resources Tutorials guide get started developing Solid applications. provide Solid libraries, feel free contribute tutorial demonstrate use them. Please dont hesitate share application develop community . What's New Developers Users Community Specification Solid Specification consists several , edited . Contributing specification contributing, please read . Join providing substantial contributions. Note Solid encourages adherence W3C's , particular . Anyone contribute filing submitting . Present proposal via relevant meeting communication channels: Submit new User Stories repository. tagged according aspect Solid relevant them, specification panel easily find work item hand. Help formulate Use Cases Requirements (UCR) based User Stories TR: Upcoming: WebID-Profile UCR (, ) Solid UCRs reviewed Diversity, Equity, Inclusion Team (). Join Solid listen, provide insight suggest topic discussion. Meeting schedules, agenda minute found GitHub page panel. Please read calling in. detail contribute found . proposal undergo Editorial review process. information proposal submission reviews, see . Tracking Progress Keep up-to-date specification progress signing . Minutes meeting kept track ongoing discussions. What's New Developers Users Community co-licensed MIT license Creative Commons Attribution 4.0 International (CC 4.0) license cover code copy respectively. individual licensors repository mentioned license.md repo well overview table below. Solid Logo CC-BY 4.0 license wa designed Guillaume Baudusseau. What's New Developers Users Community Introduction guideline help representing Solid brand apps, communications, content, events, project assets. incorporate guidance visual element logos, colours, typography, iconography graphic devices. also guidance writing tone format. guideline intended digital application. need brand guidelines? defined entity, Solid ha identity. consistent identity easier identified identify with. Solid brand may appear range different place different purposes, following guideline helping retain consistency build stronger identity. app developer Please use guideline instance looking reference Solid. particular, please pay notice guideline logo colour usage well refer Solid key element text. event organiser communications/content creator looking create Solid communications, collateral content please follow aspect guidelines. ___ Values Solid ha core value embodied everything represents represents it: Interoperability, Self-determination, Equal access, Sourcing, Public Value, Connecting Logo one single Solid logo two different applications: Contained Lettermark within solid hex shape Usage: used flat colour overlaid image. used complex pattern close proximity logos, typography graphic elements. Outlined Lettermark within outline hex shape Usage: used solid Royal Lavender (#7C4DFF) background. used close proximity logos, typography graphic elements. ___ Colour Primary Royal Lavender - #7C4DFF, R124 G77 B255 Usage: conjunction outlined Solid logo key branding element e.g. mastheads, footer primary CTA buttons. used fill within Avoid using numerous time one environment. Secondary Geyser Grey - #DAE0E6, R218 G224 B230 Usage: core functionality signposting e.g. icon secondary buttons/controls. Avoid use content. Tertiary Calatina Blue - #083575, R8 G53 B117 Usage: background fills, UI functionality, dividers, illustration Flamengo Pink - #FF6969, R255 G105 B105 Usage: background fill illustration. Utility colour Header Blue - #354866, R53 G72 B102 Usage: non header copy. Avoid using anything else. Body Grey - #666666, R102 G102 B102 Usage: non header copy. Avoid using anything else. Warning Orange - #FFA600, R255 G166 B0 Usage: warning message Error Red - #D0021B, R208 G2 B27 Usage: error messaging ___ Typography Solid brand feature two typefaces: Volkhov Usage: headlines, sub headlines, buttons, pull quote Neue Einstellung Usage: body copy, links, controls, label ___ Iconography Solid us icon provided . ease also ensure icon usable/accessible possible. ___ Gradients Solid ha one gradient combine Primary (Royal Lavender) Secondary (Deep Sky Blue, Cerulean Blue) colour equal part (33/33/33) Usage: background overlay greyscale image. used logo, typography, icon graphics. ___ Graphic element Solid hex pattern Usage: used unbroken background fill incorporated content graphics. ___ Written tone writing Solid communication content look adhere following tone voice principles: Clear instantly understood anyone, technically-minded not, fundamental ensuring Solid meet core value (see above). mean describing thing term everyone understand avoiding jargon ambiguous abbreviation/acronyms. terminology isnt vocabulary majority people. Honest true anything delivers key ensuring Solid always remains genuine trustworthy. Avoid using embellishment describing Solid excessively glowing terms. Accuracy information also key achieving integrity Solid say protected times. Solid candid truth time avoid frank outspoken. Open Solid always welcoming approachable tone language - anyone made feel like part community. always generous share never feel like withholding information. Solid avoid doctrine overly-directive favour offering guidance advice. ___ Written format Solid Pod always always capitalised never written all-caps. WebID semi-capitalised. General writing always sentence case avoid non-standard capitalisation. example, internet web decapitalised . British spelling, serial comma, generic used specify person unknown gender website copy mailing list. What's New