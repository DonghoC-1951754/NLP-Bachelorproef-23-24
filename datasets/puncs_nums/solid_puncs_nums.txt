Solid specification let people store data securely decentralized data store called Pods Pods like secure personal web server data kind information stored Solid Pod control access data Pod decide data share be individuals organizations andor applications Furthermore revoke access time store access data Pod application use standard open interoperable data format protocols Developers Users Community Solid data choice Advancing Web standard empower individual groups Solid let individual group store data securely decentralized data store called Pods Pods like secure web server data data stored Pod owner control people application access it Pod data control kind data stored Solid Pod structured data regular file might store Google Drive Dropbox folder Individuals group grant revoke access slice data needed Fully interoperable standard data Solid Pod stored accessed using standard open interoperable data format protocols Solid us common shared way describing thing relationship one another different application understand give Solid unique ability allow different application work data Share safely Anyone anything access data Solid Pod us unique ID authenticated decentralized extension OpenID Connect Solids access control system us IDs determine whether person group application ha access resource Pod Solid creates interoperable ecosystem application data Data stored Solid Pods power ecosystem interoperable application individual group free use data seamlessly across different application services Leave email address get bitesized overview everything Solid delivered straight inbox month Whats New Developers Users Community Solid Solid let people store data securely decentralized data store called Pods Pods like secure personal web server data kind information stored Solid Pod control access data Pod decide data share be individuals organizations andor applications Furthermore revoke access time store access data Pod application use standard open interoperable data format protocols Solid Servers Pods Solid Server host one Solid Pods Pods store data Pod fully controlled Pod owner ie you Pods data access rule fully distinct Pods get Pod  may choose Pod even multiple Pods hosted Pod Provider different Providers selfhosted combination thereof number Pods well Solid Server Servers use effectively transparent application service use because Solid ecosystem data linked specific Pod true data well data others shared you Data store kind data Solid Pod make Solid special ability store data way promotes interoperability Specifically Solid support storing Linked Data Structuring data Linked Data mean different application work data Access Solids systems determine people application access data grant revoke access slice data needed Consequently data application decide use granted access wider diverse set information share data others also share data you creates rich collaborative experience across combination personal shared data Solid Applications Solid application store access data Pods using  Within interoperable Solid ecosystem different application access data instead requiring separate data silo specifically applications example instead inputting email bank statement notification service phone billing service etc instead store information Pod grant access read email information disparate servicesapplications developer resources see  listing Solid applications see  Whats New Developers Users Community Getting started Solid developer get started Solid need Solid Pod WebID either use existing Pod provider run server Using existing Pod provider create aSolid Pod existing provider list existing Pod providers see  Running server following opensource server available want run own Nodejs Nodejs plugin Nextcloud PHP Rust instruction on Running Community Solid Server see  Running Node Solid Server see  Developing first app set Pod WebID youre ready develop app Various Solid client library may provide tutorial beginners example Inrupt offer  OTeam offer  Community assistance Check existing applications interesting approach follow PodOS Web Components httpsgithubcompodosPodOS soliduix Native Web Components httpsgithubcomSolidOSsoliduix Solid web frameworks embersolid starttofinish Solid Ember App Aad Versteden solidnextjsts app Arne Hassel also look Solid apps at Youtube videos Whats New Developers Users Community Solid Developer Tools  Libraries number robust developer library save reinventing wheel Everyone invited contribute new library provide feedback existing library  see   mock server used testing apps  file manager Solid pod  tool let write simply HTMLJavaScript interact Solid Pod Session Profile Inbox Chat Session Profile Inbox Chat  operating system Solid  solid databrowser technology standalone electron app  file manager Solid pod  GUI frontend Solid document management syntaxhighlighting pod editor  command line interactive shell batch processor Solid document management  Browse manage thing Solid pod typical Solid app perform one function using one associated libraries login  manage session  parse  query linked data  manage document information flow  provide user interface  Beginning developer may want start one interface library provide prebuilt components Advanced developer might want look andor participate   check Web Access Control ACLs  login session management login session management  nodejs loginsesseion Pods  Solid access local file systems backends library making RDF querying easy way query Linked Data using GraphQL  library advanced manipulation RDF  extension adapting Solid engine  library easy manipulation RDF See also handy comparison three commonly used linked data libraries create read copy upload  mange file  folder collection common RDF namespaces used Solid project  Solid access nonSolid space file systems browser IndexedDB Dropbox  Data access management manipulation Inrupt  HTML custom element aka web components read write Solid pods  SolidOS code stack Solid includes  User Interface widget utility Solid  Solidcompatible data mashup library Databrowser  set core solidcompatible apps based solidui  Core business logic SolidOS  SolidOS standalone desktop app experimental  highly modular flexible meta query engine Web  collection highperformance RDF library JavaScript developer focus usability  use Web Cryptography API Nodejs  implementation RDFJS specification Perl  Perl SolidOIDC client command line tool example app Python  simple Hello World Flask app read private data Solid pod  Python library creating managing file folder Solid pod  client authentication via SolidOIDC  client authentication via client credential Rust  simple example authenticated readswrites Solid pod Kotlin  simple example SolidOIDC using Spring Kotlin Swift  Authentication package Solid Pod PHP  PHP library creating file folder Solid pod implementing Solid OIDC also contains bundle frameworks Related Tools  Convert RDF syntax another  Dereference prefix full domain name  ontology editor Related library Python Java PHP new tool library suggested addition change page please  Whats New Developers Users Community Solid Apps Showcase Application Description Track medium never miss beat   GNU General Public License v    GNU General Public License v    general Pod Browser File manager IDE  Solid app help manages file Pod  IDE editing Solid Pods Jasmine Leonard Allows browse Solid Pod offering multiple view information including overview graph doc gallery grid well easy use Solid collaboration control file management  day free trial followed  per userper month  Social Application Description Source code MIT License Copyright  student course led react app view browse Solid WebID profiles   Add friends   Identity credential document generator creates X certificate save WebIDProfile document Solid Pod set relation required WebIDTLS WebIDTLSDelegationCopyright  Lets form social group Solid Pod  Games Application Description Movies Application Description Track medium never miss beat   GNU General Public License v    GNU General Public License v    movie tracking sharing application personalised recommendations   Project Content Notes Blogging Publishing Application Description simple notetaking app store note Solid Pod  editor app raw file using v interface   Blogging platform  client side editor decentralised article publishing annotations social interactions  Solid app view edit profile data  Solid app manage bookmarks  Bookmarking app   Vincent Tunru Bookmarks app community sharing Geolocation Application Description deployed   Application Description Uses currently able fetch weather United States  Dylan Martin Linked Data visualization sharing collaboration via Solid  Offlinefirst Recipes Manager Implements simple CRUD operation REST API solidfileclient writing tasks Chrome extension extract structured data web page store Solid Pod Pod Management Application Description Tool create share resource contact POds POCKet modular SoLiD application based webcomponents vuejs vuebootstrap using community libs like solidfileclient ldflexquery tripledoc switching app manage Pod  Pod store  Solid app help manage file Pod  RDF editor save content Solid Pod   module  ODSBriefcase includes support Solid Pods enabling readwrite access WebDAVcompliant client subject Briefcasemanaged ACLs Briefcase connects Pod Pod Owner ha full privileges   Extracts Metadata variety notation HTML doc enables storage Solid Pod via Save feature   SPARQL Query Service Endpoint support WebIDOIDC authenticating WebIDs en route functionality isnt granted unauthenticated Public eg generating description WebAccessible Document RDF publishing said description Star Linked Data form   component web app Distills action API documentation constructed using RDF OpenAPI support WebIDOIDC authentication  Widget authorisation  File manager IDE  Allows browse Solid Pod offering multiple view information including overview graph doc gallery grid well easy use Solid collaboration control file management  day free trial followed  per userper month  LinkedPipes Applications create visualiser based linked data  general Pod Browser Browse manage thing Pod Based  Apps installed Source Application Description Processes notifications solidbased alternative Doodle creating WebID account Solid compatible providers  Uses national weather service API currently able fetch weather United States  Dylan Martin way create store query event using user card  Dylan Martin framework developed within context Solid composable data browser aimed provide great user experience Solid POD services well RDF sources desktop mobile web browsers  App inclusion exclusion criterion criterion app Solidcompatible are identifying user necessary must able log using WebID pointing Identity Provider choice Data consumed app fetched Solid Pods possible Data generated app stored Solid Pods interaction app pods Identity Providers must compliant Solid specification Please note apps falling following category listed page even match criterion above Apps intentionally indirectly causing harm anyone Apps purpose could widely considered unethical Apps designed enable generation andor dissemination hate speech Apps encouraging stereotype violent behaviour towards person group Apps malicious intent data theft Apps designed fulfill illegal purposes drug traffic stolen information exchange extorsion Apps sharing user information thirdparty without user consent Apps reported important technical security issue compromise user Pods Want add eligible Solidcompatible app list Contact Solid Manager via  Disclaimer list doe represent endorsement Solid Project apps list undergo testing time guarantee security quality implied inclusion list goal list showcase vibrancy Solid community encourage early app builder collaborate learn other believe one apps insecure nonfunctional removed list please raise issue tag apps creator maintainer creator maintainer app doe respond within  hour indicate fix problem Solid Creator remove app listing Whats New Developers Users Community Get Pod Pods store data kind data stored Solid Pod stored Pod control access data get Pod Pod Provider may choose selfhost Pod Get Pod Pod Provider choosing Pod Provider question may want consider are involved legal identity provider important factor data handled example provider may engage third party host data Mapping clearly involved element provision important step picking Pod Provider involved party located data physically stored geographical location legal entity involved physical location hosting important factor determining law govern provider responsibilities Depending nationality degree trust various laws may prefer specific geographical locations terms Reading Providers Terms good way understand implication picking provider Solid tied provider choose now is ability move data elsewhere want following table list Pod Provider Provider Responsible Domain Name Terms Responsible Hosting Hosting Location Solid Implementation Germany UK France USA EU France   EU Finland France provider want add service list please create pull request update  Selfhost Pod Selfhosting Pod ie running  provides control data way dont entrust third party data Selfhosting requires technical overhead may suitable everyone yet future would like make selfhosting userfriendly option great thing Solid flexibility offers choose get Pod provider now move selfhosting later Next Steps get Pod also issued unique WebID WebID act identity Solid ecosystem example share picture Pod someone would indicate person person WebID Pod WebID check start storing data Pod even  Whats New Developers Users Community Stay date events learning resources recent developments Recent Issues Month Solid Leave email address get bitesized overview everything Solid delivered straight inbox month    Whats New Developers Users Community Solid Events Solid Events provide opportunity meet others working Solid interested Solid Solid Events run people like you interested coordinating Solid Event near you reach Solid Manager  Interested speaking upcoming Solid World fill  another Solid oriented event share Make pull request   Events Date Event Organiser Recordings Slides Notes   Solid World wa held around theme Solid Social Benefit Delivering Shared Public Resources heard news Solid Team presentation PASS Project Open Commons SleepyBike Project Digital Flanders    Leuven Belgium   Ghent Belgium  onsite event only   Events Date Event Organiser Recordings Slides Notes  Aaron Coburn updated u news WCs annual meeting Jackson Morgan presented  Davi Ottenheimer presented Solid enable responsible AI team Northeastern University presented predictive generative AI leverage Solid  Solid World wa held  am EDT CEST wa update CSS announcement Inrupts Solid hackathon winners presentation Graphmetrix Motius     dedicated workshoppanel session Solid project conference alongside interesting people presentation many likeminded projects Location Helsinki    goal symposium provide forum researchers early adopter company public administration community large discus current state art around Solid exchange idea developments  Ruben Verborgh updated u Solid WC Working Group Melissa Wood SolidMcr announced creation SolidUK Esther de Loof SolidLab Flanders presented finding first annual  Oz Olivo presented Inrupts   discussing essential part make Solid apps presentation Chase Hunt contributor SolidOS getting involved open source opportunity join help grow Solid ecosystem  Events Date Event Organiser Recordings Slides Notes  Jun Zhao Hunar Batra Rui Zhao Oxford University presented two Solidbased applications  Jackson Morgan presented  also heard formation Solid WC Working Group  BBC Research  Development team presented new watch party product   Eliott Behar privacy human right attorney Davi Ottenheimer VP Trust Digital Ethics Inrupt Michiel Fierens doctoral researcher SolidLab Flanders participated panel discussion Solid New Data Regulations  Register  previewed launch Trinpod service Esther de Loof u Melissa Wood told u latest  Right Rent Right Work PreEmployment Screening preventing modern slavery DBS check  CDD Services introduce two product requiring help reach market Sign   Muze host meetup Solid Linked Data Decentralized Web MCH  Zeewolde Netherlands talk workshop three afternoons starting July th youve got something show tell tell u youre coming please mail   Presentation Ruben Verborgh told u Aaron Coburn told u  Presentation Flanders Data Utility Company Team Hear firsthand insight Flemish Data Utility Company want stimulate citizen trust sharing data focusing responsible secure data sharing Data Utility Companys Solid Pod platform designed establish trusted data ecosystem groundbreaking technology Data Utility Companys platform mitigates cost risk associated innovative technology lowering threshold organization enter Solid ecosystem     Mel W  Presentation Philippe Duchesne DataVillage  Luk Overmeire VRT DataVillage developing platform perform confidential data processing personal data end user allow service provider process data produce derived data guarantee original data read service provider itself DataVillage joined VRT Flemish public broadcasting company using DataVillage platform build usercontrolled content recommendation service audience  Presentations Jasmine Leonard Solid developer tool Sebastien Rosset  new kind architecture web application aim reconcile ActivityPub Solid standard  Presentations Gertjan de Mulder Pete Edwards link meetup shared  Presentations  Chair Solid Editor presented recent milestone release  Ruben Verborgh Professor decentralized Web technology Ghent University presented  link meetup shared Earlier Events Date Event Organiser Recordings Slides Notes  Presentations SolidOS code home Justin Bingham gave update growth specification Solid Solid team Jeff Zucker explained new Solid Glossary welcoming newcomers glossary contains libraries essential tools documentation community topics  Solid Editorial Team would like increase communication community member actively implementing Solid compliant server client technologies session open public welcome everyone attend session However effort maintain focus stated goal session individual actively engaged implementing Solid compliant server client technology queued speak actively participate implementer must  member Solid Community Group  RSVP advance  Must able cite active implementation work Legitimate citation include link Github repositories link product description websites otherwise credible explanation active work efforts Implementers encouraged submit questions issues topic advance  may included RSVP sent separately afterwards Minutes recorded posted httpsgithubcomsolidspecificationtreemainmeetings   Schedule Solid Project Review httpscalendlycommarrellebaileywebsiteresearch Join  Tanis Presentation   Email  Ennos Presentation      Contact Email mailto Marias  Jans Presentation      PoC Project repo       Ruben Presentation Links      Jacksons Presentation  wa hostessTalks Matter You BBC Solid CERNSolid Proof Concept Additional links     Also attendant Maria Dimou Rubens Update  Oz Update      Solid Interplanetary File SystemFabrizio Parrillo U Basel Switzerland Christian F Tschudin U Basel Switzerland  Also attendant Maria Dimou Tims Flanders Press        Also attendant Maria Dimou Jackson Morgans links       Christian Buggedeis links  Aaron Coburns Jack Lawsons links     Also attendant Maria Dimou Tims talk Ozs talk Graphmetrix talk  NextcloudPDS Interops talk       SpoterMes talk   wa hostess gave u short introduction Solid talked RDF told u SolidOS presented authentication process SolidRecording first Women Solid Meetup  Additional links       Also attendant Maria Dimou Community Spotlights created Ruben Verborgh gave update Community Solid Server CSS mentioned links  Osmar Olivo asked  presented theyre working  Creafree    Also attendant Maria Dimou Tim BernersLees Update  Ruben Verborghs update Community Solid Server  Osmar Olivo update Nodejs support  Presentation    Jasmine Leonards Presentation      Hindia Mohammeds Presentation   Resources event          Rubens presentation   CERNs presentation    Digitas    attendant Maria Dimou   attendant Maria Dimou  slides  slides   attendant Maria Dimou           Christian Buggedei    Erwin Folmer  Kartika Tulusan  Solid Montreal   Sarmad Reda  Solid Amsterdam   Solid Beijing   Bart Roorda      Solid New York Brian Cort         Solid Stockholm  Solid Berlin  Solid Oslo  Solid Utrecht   Whats New Developers Users Community Press looking get speaker interview Solid Contact u description looking for Talks Mentioning Solid   Zero Hero Solid  FOSDEM Noel De Martin   Angelo Veltens   Virginia Balseiro  Ruben Verborgh  Ruben Verborgh  Michiel de Jong  Tim BernersLee  Jeff Zucker  Ruben Verborgh  NoelDeMartin  Davi Ottenheimer  Alejandro Juan Garcia  NoelDeMartin  Maria Dimou Sarven Capadisli Mitzi Lszl  Michiel de Jong  Jonas Smedegaard  Alice Poggioli   Ruben Verborgh  Alejandro Juan Garca  Nocturne Informatie Vlaanderen Ruben Verborgh  Tim BernersLee  Mitzi Lszl  Pieter van Everdingen  Sarven Capadisli  Mitzi Lszl  Ruben Verborgh  Mitzi Lszl  Ruben Verborgh  Sarven Capadisli  Ruben Verborgh  Ruben Verborgh  Mitzi Lszl  Ruben Verborgh  Ruben Verborgh  Sarven Capadisli  Die Rckeroberung de Social Web Angelo Veltens  Ruben Verborgh  Mitzi Lszl  Justin Bingham  Postgress Tim BernersLee  Ruben Verborgh  Ruben Verborgh  Ruben Verborgh  Ruben Verborgh  Ruben Verborgh  STRP Festival Ruben Verborgh  Juan Lupin  Beyond Data Event Ruben Verborgh  John Bruce Justin Bingham  Tim BernersLee  Ruben Verborgh  Ruben Taelman  Mitzi Lszl  Ruben Verborgh  Ruben Verborgh   Ruben Verborgh  Ruben Verborgh  Tim BernersLee  Tim BernersLee  Ruben Verborgh  AjayKumar  Ruben Verborgh  Ruben Verborgh  Web Foundation Seminar Ruben Verborgh  Ruben Verborgh  Ruben Verborgh  Ruben Verborgh  Ruben Verborgh  Tim BernersLee  Ruben Verborgh  Tim BernersLee  Ruben Verborgh  Tim BernersLee  Ruben Verborgh  Tim BernersLee   Herbert van der Sompel   Tim BernersLee  Andrei Sambra Amy Guy Sarven Capadisli Nicola Greco  Andrei Sambra  Nicola Greco   Andrei Sambra  Nicola Greco  Andrei Sambra  Andrei Sambra  Nicola Greco Mentions Solid Articles                                                                                                                                                          API Best Class Solid Decentralized Web Tim BernersLee something again                                                                               Whats New Solid Protocol Version   detail document version Latest published version Previous version Editors draft TimeMap Editors Published  Modified  Repository Language English License Document Status Published Reply Policy Rule Unique Identifier Target Permission Assigner Action MIT License Copyright   Abstract document connects set specification that together provide application secure permissioned access externally stored data interoperable way Status Document section describes status document time publication document wa published Version  section incorporated reviewed following  However information document still subject change invited feedback comments question might have Publication Version  doe imply endorsement WC Membership document may updated replaced obsoleted document time inappropriate cite document work progress document wa produced group operating  humanreadable available Table Contents Introduction section nonnormative aim Solid project line Web itself empowerment towards equitable informed interconnected society Solid add existing Web standard realise space individual maintain autonomy control data privacy choose application service fulfil needs Solid ecosystem encapsulates set specification guided principle adopted also priority values acknowledge every technical decision ha ethical implication end user shortterm well society longterm contribute towards net positive social benefit use  orient ourselves consensus technical design informed common use cases implementation experience use overarching design goal Solid ecosystem evolvable provide fundamental affordances decentralised Web application information exchange way secure privacy respecting environment actor allocate identifier content shape store data access to set access controls use preferred application service achieve them general architectural principle Solid specification borrowed  component described specification may evolve independently according principle orthogonality order increase flexibility robustness Solid ecosystem that specification loosely coupled indicate feature overlap governed another specification Extensibility well variability also taken account specification specification ecosystem describe Solid server client interoperable using Web communication protocols global identifiers authentication authorization mechanisms data format shapes query interfaces specification accompanied supplemental documents Primers Best Practices Guidelines help implementers form wellrounded understanding Solid ecosystem well way improve implementations specification for Resource server developer want enable client send retrieve information Application developer want implement client perform operation resources Terminology section nonnormative Solid Protocol specification defines following terms term referenced throughout specification storage storage space URIs affords agent controlled access resources Solid app Solid app application read writes data one  URI Uniform Resource Identifier URI provides mean identifying resource  resource resource target HTTP request identified URI  container resource container resource hierarchical collection resource contains resources including containers root container root container container resource highest level collection hierarchy resource metadata Resource metadata encompasses data resource described mean RDF statement  agent agent person social entity software identified URI eg WebID denotes agent  owner owner person social entity considered right responsibility storage owner identified URI implicitly ha control resource storage owner first set storage provisioning time changed origin origin indicates HTTP request originates  read operation read operation entail information resource existence description known  write operation write operation entail information resource created removed  append operation append operation entail information added removed  Namespaces Prefixes Namespaces Prefix Namespace Description rdf httpwwwworgrdfsyntaxns  ldp httpwwwworgnsldp  solid httpwwwworgnssolidterms Solid Terms pim httpwwwworgnspimspace Workspace Ontology acl httpwwwworgnsauthacl ACL Ontology dcterms httppurlorgdcterms  stat httpwwwworgnsposixstat POSIX File Status Conformance section describes conformance model Solid Protocol Normative Informative Content assertions diagrams examples note nonnormative section explicitly marked nonnormative Everything else normative key word MUST MUST NOT SHOULD MAY interpreted described   when when appear capitals shown here key word strongly encouraged strongly discouraged encouraged discouraged can cannot could could not might might used nonnormative content Specification Category Solid Protocol identifies following distinguish type conformance API notationsyntax set events processor behaviour protocol Classes Products Solid Protocol identifies following conforming implementations product referenced throughout specification Server build HTTP server   defining medium types HTTP header fields behaviour resources identified link relations Client build HTTP client    defining behaviour term fetching across platform Interoperability Interoperability implementation tested evaluating implementation ability request respond HTTP message conform specification Hypertext Transfer Protocol Solid need exchange data securely Internet using HTTP Web standard section describes detail part HTTP must implemented client servers HTTP Server Servers MUST conform HTTP Message Syntax Routing  HTTP Semantics Content  Servers conform HTTP  Servers use TLS connection http URI scheme order secure communication clients http http URI scheme supported server MUST redirect http URIs http counterpart using response  status code Location header Servers MUST conform HTTP Conditional Requests  Servers conform HTTP Caching  Servers MAY conform HTTP Range Requests  Servers MUST conform HTTP Authentication  client doe provide valid credential requesting resource requires see  server MUST send response  status code unless  preferred security reasons Server MUST reject PUT POST PATCH request without ContentType header status code   HTTP Client Clients MUST conform HTTP Message Syntax Routing  HTTP Semantics Content  Clients MAY conform HTTP  Clients MAY conform HTTP Conditional Requests  Clients MAY conform HTTP Caching  Clients MAY conform HTTP Range Requests  Clients MUST conform HTTP Authentication  need access resource requiring authentication see  client receives response   status code client MAY repeat request different credentials Clients MUST use ContentType HTTP header PUT POST PATCH request   Uniform Resource Identifier Note Storage Owner URI Ownership specification doe describe relationship storage owner Web architecture  URI Slash Semantics slash  character URI path indicates hierarchical relationship segments enables relative referencing  semantics slash character shared server clients Paths ending slash denote container resource  two URIs differ trailing slash server ha associated resource one them URI MUST correspond another resource Instead server MAY respond request latter URI  redirect former  Servers MUST authorize prior optional redirect  URI Persistence section nonnormative Servers reuse URIs regardless mechanism resource created Certain specific case exist URIs may reinstated identifies resource consistent Web architecture   Note URI Reuse Servers wish disable URI reuse may want use  status code Resources Storage Resource Servers MUST provide one  storage resource pimStorage root container contained resource see  server support multiple storages URIs MUST allocated nonoverlapping space Servers MUST advertise storage resource including HTTP Link header reltype targeting httpwwwworgnspimspaceStorage responding storage request URI Clients determine resource type storage making HTTP HEAD GET request target URL checking Link header reltype targeting httpwwwworgnspimspaceStorage Clients determine storage resource moving URI path hierarchy response includes Link header reltype targeting httpwwwworgnspimspaceStorage Clients discover storage making HTTP GET request target URL retrieve RDF representation  whose encoded RDF graph contains relation type httpwwwworgnspimspacestorage object relation storage pimStorage   Servers MUST include Link header relhttpwwwworgnssolidtermsstorageDescription targeting URI storage description resource response HTTP GET HEAD OPTIONS request targeting resource storage Servers MUST include part storage description resource Storage description statement include properties rdftype class whose URI httpwwwworgnspimspaceStorage  Servers MUST keep track least one storage implementation defined way server want advertise owner storage server MUST include Link header relhttpwwwworgnssolidtermsowner targeting URI owner response HTTP HEAD GET request targeting root container  Resource Containment Solid ha notion container represent collection linked resource help resource discovery lifecycle management  correspondence containment triple relative reference within path name hierarchy  follows resource discoverable container possible create orphan resources  representation behaviour container Solid corresponds LDP Basic Container MUST supported server  Servers determine value HTTP LastModified header field response HEAD GET request targeting container based change containment triples Note Container LastModified Comparison LastModified container change part container changes avoid instant propagation change way root container LastModified cannot reliably used check whether container representation ha changed way future version specification design may revisited Contained Resource Metadata Container description limited containment triples support client navigation application interaction server include contained resource part container description described below Servers include part container description unless information inapplicable server Contained resource metadata statement include properties rdftype class whose URI expansion URI Template  httpwwwworgnsianamediatypesianamediatypeResource ianamediatype corresponds value IANA Media Types  statsize nonnegative integer giving size resource bytes dctermsmodified date time resource wa last modified statmtime Unix time resource wa last modified dctermsmodified value contained resource corresponds LastModified header value contained resource one perform HEAD GET request URI contained resource time HTTP message generation response  status code including LastModified header would indicate date time Note Contained Resource Metadata Considerations generation contained resource metadata may inapplicable servers example information doe exist expensive determine Contained resource metadata     Auxiliary Resources Solid ha notion auxiliary resource provide supplementary information descriptive metadata authorization conditions data shape constraints digital right provenance record given resource hereafter referred subject resource affect resource others associated processed served interpreted Servers MUST support auxiliary resource defined specification manage association subject resource auxiliary resources subject resource deleted auxiliary resource also deleted server  Auxiliary resource represented RDF document  HTTP interaction auxiliary resource subject requirement per  Note Selfdescribing Resources applicable promote  implementation author encouraged use subject resource instead associated auxiliary resource Note URI Origin resource associated auxiliary resource different origin  specification defines following type auxiliary resources Servers MUST advertise auxiliary resource associated subject resource responding HEAD GET request including HTTP Link header rel parameter  Clients discover auxiliary resource associated subject resource making HTTP HEAD GET request target URL checking HTTP Link header rel parameter  Auxiliary Type Link Relation Definitions acl  describedby  Web Access Control auxiliary resource type Web Access Control provides access control description subject resource  Description Resource auxiliary resource type Description Resource provides description subject resource Servers MUST directly associate one description resource subject resource HTTP request target description resource server MUST apply authorization rule used subject resource description resource associated Clients discover resource described description resource making HTTP HEAD GET request target URL checking HTTP Link header rel value describes inverse describedby relation  Reading Writing Resources Servers MUST respond  status code request using HTTP method supported target resource  Resource Type Heuristics creating new resources server determine effective request URIs type examining URI path ending  successful PUT PATCH request creates resource server MUST use effective request URI assign URI resource successful POST request creates resource server MUST assign URI resource Servers MAY allow client suggest URI resource created POST using HTTP Slug header defined  Note URI Allocation Clients use PUT PATCH request assign URI resource Clients use POST request server assign URI resource  Reading Resources Servers MUST support HTTP GET HEAD OPTIONS method  client read resource determine communication options  Servers MUST indicate HTTP method supported target resource generating Allow header field successful responses responding authorized requests server MUST indicate supported medium type HTTP AcceptPatch  AcceptPost  AcceptPut  response header correspond acceptable HTTP method listed Allow header value response HTTP GET HEAD OPTIONS requests    Writing Resources Servers MUST support HTTP PUT POST PATCH method    Servers MUST create intermediate container include corresponding containment triple container representation derived URI path component PUT PATCH requests  Servers MUST allow creating new resource POST request URI path ending  Servers MUST create resource URI path ending id container  Servers MUST create container URI path ending id container  request including HTTP Link header reltype targeting valid LDP container type   POST method request target resource without existing representation server MUST respond  status code  PUT PATCH method request target auxiliary resource server MUST create update it POST method request Slug header target auxiliary resource server MUST respond  status code response body describing error  Servers MUST allow HTTP PUT PATCH container update containment triples server receives request MUST respond  status code  Servers MUST allow HTTP POST PUT PATCH update container  server receives request MUST respond  status code  Note Conditional Update Clients encouraged use HTTP IfNoneMatch header value  prevent unsafe request method eg PUT PATCH inadvertently modifying existing representation target resource client belief resource doe current representation    Servers MAY use HTTP ETag header strong validator RDF bearing representation order encourage client optin using IfMatch header requests Modifying Resources Using N Patches Servers MUST accept PATCH request N Patch body target request RDF document  Servers MUST indicate support N Patch listing textn value AcceptPatch header  relevant responses  N Patch document Notation N format  identified medium type textn conforming following constraints patch document MUST contain one patch resources patch resource MUST identified URI blank node refer patch remainder section patch resource MAY contain triple  patch rdftype solidPatch patch resource MUST contain one triple form patch soliddeletes deletions patch resource MUST contain one triple form patch solidinserts insertions patch resource MUST contain one triple form patch solidwhere conditions present deletions insertions conditions MUST nonnested cited formula  consisting triple andor triple pattern  present presumed empty formula  specification might provide structure interpretation wider class N Patch documents present specification governs application N Patch document additionally adhere following constraints patch document MUST contain exactly one patch resource identified one triple pattern described above share patch subject patch resource MUST contain triple patch rdftype solidInsertDeletePatch insertions deletions formula MUST contain variable occur conditions formula insertions deletions formula MUST contain blank nodes Servers MUST respond  status code  patch document doe satisfy constraints conditions nonempty server MUST treat request  insertions nonempty server MUST also treat request  deletions nonempty server MUST treat request  Servers MUST process patch resource target document follows Start RDF dataset target document empty RDF dataset target resource doe exist yet conditions nonempty find possibly empty variable mapping resulting triple occur dataset mapping exists multiple mapping exist server MUST respond  status code  resulting variable mapping propagated deletions insertions formula obtain two set resulting triples set triple resulting deletions nonempty dataset doe contain triples server MUST respond  status code  triple resulting deletions removed RDF dataset triple resulting insertions added RDF dataset blank node insertions resulting newly created blank node combination deletion followed insertion form new resource state RDF document server responds appropriate status code Example Applying N patch prefix solid httpwwwworgnssolidterms prefix ex httpwwwexampleorgterms rename solidInsertDeletePatch solidwhere  person exfamilyName Garcia  solidinserts  person exgivenName Alex  soliddeletes  person exgivenName Claudia  N Patch instructs rename Claudia Garcia Alex Garcia condition Garcia family member present target RDF document Deleting Resources Servers MUST support HTTP DELETE method    DELETE request target storage root container associated ACL resource server MUST respond  status code Server MUST exclude DELETE method HTTP response header Allow response request resource   contained resource deleted server MUST also remove corresponding containment triple  contained resource deleted server MUST also delete associated auxiliary resource see section DELETE request target container server MUST delete container contains resources container contains resources server MUST respond  status code response body describing error  section nonnormative server might perform additional actions described normative reference like  example server could perform additional cleanup task resource know longer referenced accessed period time on Subsequent GET request deleted resource usually result   status code although HTTP allows others   Resource Representations server creates resource HTTP PUT POST PATCH request request representation data encodes RDF document  as determined ContentType header server MUST accept GET request resource value Accept header request representation textturtle applicationldjson       PUT POST PATCH DELETE method request target representation URL different resource URL server MUST respond   status code Location header specifying preferred URI reference  Constraints Problem Details section nonnormative Servers encouraged publish constraint client ability create update resource adding Link header appropriate context URI link relation httpwwwworgnsldpconstrainedBy target URI identifying set constraint  response request fail due violation constraints Link header provided responses Servers encouraged use URIs constraint defined specification constraint URIs within authority depending requests semantics target resource Constraints intended protected persistent resource therefore cannot modified clients facilitate better client interactions encouraged express constraint RDF  Linked Data Notifications Solid server MUST conform LDN specification implementing Receiver part receive notification make Inbox content available  Solid client MUST conform LDN specification implementing Sender Consumer part discover location resource Inbox send notification Inbox retrieve content Inbox  Live Update Solid Notifications Protocol Entities Solid ecosystem use communicate change affecting resource Servers MUST conform  implementing enable client discover subscription resource notification channel available given resource storage Servers MUST conform  implementing process produce instruction subscription requests Servers MUST conform  implementing produce send message  Servers MUST conform  implementing receive process message conform notification channel type following nonnormative Solid WebSockets API Unofficial Draft  ha common notification protocol many years draft doe include authentication mechanism therefore Protocol ha transitioned require  Existing client server implementation begin providing support new notification protocol supporting backwards compatibility appropriate CrossOrigin Resource Sharing typically access data multiple sources However Web browser default prevent apps run one origin accessing data origins crossorigin protection security mechanism ensures malicious website cannot simply read profile banking detail websites However reasonable default pose problem even benevolent Solid apps might good reason access data different places instance Solid app httpsappexample would prevented accessing data httpsguinanexample httpsdarmokexample even Guinan Darmok given user app permission see data case origin access protection mechanism browser builtin crossorigin protection actually obstacle rather feature all storage already ensure access control certain document accessed specific people applications Preventively blocking apps different origin thus introduces unnecessary barrier Fortunately Web server indicate browser certain document require crossorigin protection mechanism selectively disable protection called CrossOrigin Resource Sharing CORS  responding browser request specific combination HTTP headers server indicate action allowed given resource Solid goal allow action CORS level deeper layer exert full control apps allowed permissions next section describes achieve right HTTP header configuration CORS Server server MUST implement CORS protocol  that extent possible browser allows Solid apps send request combination request header server Solid app read response response header received server server wish block access resource MUST happen via CORS MUST instead communicated Solid app browser HTTP status code     Note CORS Protocol Blocking Since CORS protocol part Living Standard might changed point might necessitate change server implementation continued prevention undesired blocking mitigate ha suggested Concretely whenever server receives HTTP request containing valid Origin header  server MUST respond appropriate AccessControl header specified CORS protocol  particular server MUST set AccessControlAllowOrigin header valid Origin value request list Origin Vary header value server MUST make used response header readable Solid app AccessControlExposeHeaders with possible exception AccessControl header themselves server MUST also support HTTP OPTIONS method  respond appropriately CORS preflight requests Careful attention warranted especially many edge cases instance server explicitly enumerate used response header AccessControlExposeHeaders rather resorting  doe cover case such credential mode set include Servers also explicitly list Accept AccessControlAllowHeaders value longer  character not uncommon RDFbased Solid apps would otherwise blocked despite shorter Accept header allowed without explicit mention Identity WebID WebID HTTP URI denoting agent example person organisation software  WebID dereferenced server provides representation WebID Profile RDF document  uniquely describes agent denoted WebID WebIDs underpinning component Solid ecosystem used primary identifier user applications Authentication SolidOIDC Solid OpenID Connect Solid OIDC specification defines resource server verify identity relying party end user based authentication performed OpenID provider  WebIDTLS section nonnormative Solid ecosystem initially relied WebIDTLS authenticated resource access  current recommendation authentication relies SolidOIDC  Implementations use WebIDTLS mechanism additional authentication method Authorization Servers MUST conform either Web Access Control  Access Control Policy  specifications Web Access Control Web Access Control WAC decentralized crossdomain access control system providing way Linked Data system set authorization condition HTTP resource using Access Control List ACL model Server manages association resource ACL resource  applies authorization condition requested operations Authorizations described using express determine access privilege requested resource Applications discover authorization rule associated given resource control rules directed agent Clients MUST conform Web Access Control specification      Access Control Policy Access Control Policy ACP language describing controlling granting access resources Authorizations described using express determine access privilege requested resource Clients MUST conform Access Control Policy specification   HTTP Definitions HTTP Headers AcceptPut Response Header specification introduces new HTTP response header AcceptPut used specify document format accepted server HTTP PUT requests modelled AcceptPatch header defined  AcceptPost header defined  syntax AcceptPut using ABNF syntax defined Section   is AcceptPut  AcceptPut   mediarange AcceptPut header specifies commaseparated list medium range with optional parameters defined  Section  AcceptPut header effect us syntax HTTP Accept header minus optional acceptparams BNF production since latter doe apply AcceptPut presence AcceptPut header response method implicit indication PUT allowed resource identified request URI presence specific document format header indicates specific format allowed PUT request resource identified request URI IANA Registration Template AcceptPut response header must added permanent registry see  Header field name AcceptPut Applicable Protocol HTTP AuthorChange controller WC Solid Community Group Specification document specification Considerations section detail security privacy accessibility internationalization considerations normative reference specification point document Living Standard Draft status meaning content still change time advised monitor documents change might implications Security Considerations section nonnormative section attempt highlight set security considerations complete list Implementers urged seek advice security professional implementing mission critical system using technology outlined specification Implementations subject security consideration found HTTP   Servers strongly discouraged assuming HTTP request header fieldvalues valid nonmalicious Servers strongly encouraged sanitize request processing incorporating message sent others Servers encouraged reject bad request conflict specifications normative requirements Servers encouraged restrict untrusted requests Servers encouraged apply normalization canonicalization algorithm applicable Servers encouraged take measure mitigate potential timing attack attempting discover resource existence even requesting agent ha access resources Servers strongly discouraged exposing information beyond minimum amount necessary enable feature Servers strongly discouraged assuming user agent regular Web browser even request contain familiar value header UserAgent Origin assumption could lead incorrect conclusion security model application making request since request might actually come nonbrowser actor unaffected browser security constraints Servers browser resource access governed explicitly component such server cannot rely browserbased crossorigin protection mechanism determining authentication status representation resource particular server strongly encouraged ignore HTTP cooky untrusted origins Additional security measure taken prevent metadata error response leaking instance malicious application could probe multiple server check whether response status code   could try access error page intranet server within user agent private network extract company name data mitigate this request untrusted Origin arrives server may want set status code error response  andor anonymize censor contents Servers encouraged use TLS connection protect content request response eavesdropping modification third parties Unsecured TCP connection without TLS may used testing environment server behind reverse proxy terminates secure connection Privacy Considerations section nonnormative Privacy one ethical value underpin web empower people need strong privacy protection respect information flows implementers well developer specification Solid ecosystem encouraged consider privacyrelated design choice per WC  Servers encouraged use authorization technique prevent unwanted access resources rather depending relative obscurity resource names Identifiable Information order prevent leakage nonresource data server strongly discouraged including identifiable information error responses Accessibility Considerations section nonnormative acknowledge diversity people using Web anyone may create use information aim inclusive design wide range people abilities section detail general accessibility consideration take account Web content accessibility accessible applications authoring tools accessible user agent us specification Web Content Accessibility implementation Web standard protocol ignoring accessibility issue make information unusable large subset population strongly encouraged follow accessibility guideline standards  cover array recommendation make content accessible wider range people regardless disability limitation sensitivity also strongly encouraged follow guidance  Accessible Applications help assistive technology provide consistent user interface understanding objects strongly encouraged follow  recommendations enable semantic navigation styling interactive feature context digital publishing encouraged follow  support structured graphic charts graphs technical drawing scientific diagrams assistive technology order improve accessibility graphic diagram detailed annotations encouraged follow  Authoring Tool Accessibility contribute proliferation Web content accessible broad range people strongly encouraged follow  design authoring tool support production accessible content accessible user interfaces User Agent Accessibility Guidelines support general principle development accessible user agents ie software retrieves render facilitates enduser interaction web content strongly encouraged follow  Internationalization Considerations section nonnormative Adaptability content software need target audience help towards accessibility mechanism cater information interface people culture region language preference participate better Towards end strongly encouraged apply recommendation best practice WC  example content author can include link navigate different language content declare base language document indicate multiple language directional flow help translations use Unicode character encoding eg UTF data form text ensure correct effects check minimise inappropriate cultural bias improve translatability restrict markup use structure semantics Security Privacy Review section nonnormative question provide overview security privacy consideration specification guided  known security impact feature specification Yes Access resource granted authorized agents HTTP request payload contain data including identifies refers user application personal data application include extended client server feature require obtaining exposing sensitive information No No No Resources described within framework HTTP kind resource required RDF documents Servers might able redirect resources eg https URLs file data blob URLs behaviour defined specification No detail another origin state exposed association resource auxiliary resource discretion server different origin  server participates  HTTP request different origin may allowed feature doe add new attack surface beyond normal  extra mitigation deemed necessary No No No None Inapplicable different browser normal state Yes  No Inapplicable Societal Impact Review section nonnormative question provide overview ethical consideration societal impact guided            Yes  Change Log section nonnormative summary editorial substantive change section based WC Process Document  Changes protocol version Amend language document details markup Add  Update  Change requirement server including Accept header  Add requirement server  Constrain server requirement successful responses Update current copyright year Add advisement  Add requirement storage description    Add requirement  Remove term data pod add definition  Add  Add consideration restricting untrusted requests Update add     Update  Add requirement  References Normative References ACP  Matthieu Bosquet WC Solid Community Group  May  Version  URL DCTERMS  DCMI Usage Board DCMI  October  DCMI Recommendation URL FETCH  Anne van Kesteren WHATWG Living Standard URL IANAMEDIATYPES  IANA URL JSONLD  Gregg Kellogg PierreAntoine Champin Dave Longley WC  July  WC Recommendation URL LDN  Sarven Capadisli Amy Guy WC  May  WC Recommendation URL LDP  Steve Speicher John Arwe Ashok Malhotra WC  February  WC Recommendation URL N  Drthe Arndt William Van WoenselDominik Tomaszuk Gregg Kellogg WC  September  Draft Community Group Report URL POWDERDR  Phil Archer Kevin Smith Andrea Perego WC  September  WC Recommendation URL RDFSCHEMA  Dan Brickley Ramanathan Guha WC  February  WC Recommendation URL RDFCONCEPTS  Richard Cyganiak David Wood Markus Lanthaler WC  February  WC Recommendation URL RFC  S Bradner IETF March  Best Current Practice URL RFC  G Klyne M Nottingham J Mogul IETF September  Best Current Practice URL RFC  T BernersLee R Fielding L Masinter IETF January  Internet Standard URL RFC  L Dusseault Ed IETF June  Proposed Standard URL RFC  J Gregorio Ed B de hOra Ed IETF October  Proposed Standard URL RFC  L Dusseault J Snell IETF March  Proposed Standard URL RFC  A Barth IETF December  Proposed Standard URL RFC  I Fette A Melnikov IETF December  Proposed Standard URL RFC J Gregorio R Fielding M Hadley M Nottingham D Orchard IETF March  Proposed Standard URL RFC  E Wilde IETF March  Informational URL RFC  R Fielding Ed J Reschke Ed IETF June  Proposed Standard URL RFC  R Fielding Ed J Reschke Ed IETF June  Proposed Standard URL RFC  R Fielding Ed J Reschke Ed IETF June  Proposed Standard URL RFC  R Fielding Ed Y Lafon Ed J Reschke Ed IETF June  Proposed Standard URL RFC  R Fielding Ed M Nottingham Ed J Reschke Ed IETF June  Proposed Standard URL RFC  R Fielding Ed J Reschke Ed IETF June  Proposed Standard URL RFC  M Belshe R Peon M Thomson Ed IETF May  Proposed Standard URL RFC  B Leiba IETF May  Best Current Practice URL RFC  M Nottingham IETF October  Proposed Standard URL SOLIDNOTIFICATIONSPROTOCOL  Sarven Capadisli WC Solid Community Group  December  Version  URL SOLIDOIDC  Aaron Coburn elf Pavlik Dmitri Zagidulin WC Solid Community Group  March  Version  URL SPARQLQUERY  Steve Harris Andy Seaborne Eric Prudhommeaux WC  March  WC Recommendation URL Turtle  Eric Prudhommeaux Gavin Carothers WC  February  WC Recommendation URL WCHTML  WC  January  WC Recommendation URL WAC  Sarven Capadisli WC Solid Community Group  July  Version cr URL WEBARCH  Ian Jacobs Norman Walsh WC  December  WC Recommendation URL WEBID  Andrei Sambra Stphane Corlosquet WC WebID Community Group  March  WC Editors Draft URL Informative References ATAG  Jan Richards Jeanne F Spellman Jutta Treviranus WC  September  WC Recommendation URL COGAUSABLE  Lisa SeemanHorwitz Rachael Bradley Montgomery Steve Lee Ruoxi Ran WC  December  WC Working Draft URL DPUBARIA  Matt Garrish Tzviya Siegman Markus Gylling Shane McCarron WC  December  WC Recommendation URL GRAPHICSARIA  Amelia BellamyRoyds Joanmarie Diggs Michael Cooper WC  October  WC Recommendation URL PRIVACYPRINCIPLES  Robin Berjon Jeffrey Yasskin WC  May  WC Group Draft Note URL SECURITYPRIVACYQUESTIONNAIRE  Theresa OConnor Peter Snyder WC  March  WC Note URL SOCIETALIMPACTQUESTIONNAIRE  Amy Guy WC  Dec  WC Draft TAG Finding URL SOLIDWEBSOCKETSAPI  Nicola Greco Dmitri Zagidulin Ruben Verborgh WC Solid Community Group  June  Unofficial Draft URL UAAG  James Allan Greg Lowney Kimberly Patch Jeanne F Spellman WC  December  WC Note URL WAIARIA  Joanmarie Diggs James Nurthen Michael Cooper WC  March  WC Candidate Recommendation URL WCAG  Jeanne F Spellman Rachael Bradley Montgomery Shawn Lauriat Michael Cooper WC  January  WC Working Draft URL ETHICALWEBPRINCIPLES  Daniel Appelquist Hadley Beeman Amy Guy WC  May  WC Group Draft Note URL WCPROCESS  Elika J Etemad  fantasai Florian Rivoal WC Process Community Group  November  URL WEBIDTLS  Henry Story Stphane Corlosquet Andrei Sambra WC WebID Community Group WC Editors Draft URL Developers Users Community Solid team help coordinate standardisation work support implementing using Solid read open suggestion around improve sending email  Sir Tim BernersLee Solid Director Sir Tim BernersLee cofounder Chief Technology Officer Inrupt Named one Time Magazines  Important People th Century Tim invented web CERN  Founder Director World Wide Web Consortium WC international standard forum technical development Web Web Foundation whose mission World Wide Web serf Humanity cofounded President Open Data Institute London Tim Professor Massachusetts Institute Technology MIT Computer Science AI Lab CSAIL April  Sir Tim wa awarded Turing Prize considered Nobel Prize Computing Editors Editors responsible maintaining reviewing suggestion Solid specification Sarven Capadisli Solid Editor contributes advancement technical specification Solid ecosystem aim ensure open consensus within common ethical framework involved evolution Solid alongside TimBL MIT since  Ruben Verborgh Solid Editor focus ecosystem architecture developer experience Justin Bingham Solid Editor Justin Bingham cofounder Chief Technology Officer Janeiro Digital team apply Solid solve largescale problem across world closely involved evolution Solid ecosystem including data interoperability patterns secure data boundaries developer tooling frictionless end user experience Dmitri Zagidulin Solid Editor Dmitri Senior Consulting Software Engineer Digital Bazaar cofounder Ro Network also CoCoChair Secure Data Storage Working Group Decentralised Identity Foundation wa part MIT Solid project Kjetil Kjernsmo Solid Editor Kjetil Senior Advisor Norwegian Agency Development Cooperation work technical expert normative technology Digital Public Goods ha PhD Informatics University Oslo Norway ha  year experience social semantic web technology Creators Creators responsible maintaining reviewing suggestion solidprojectorg includes Solid content newsletter Month Solid Kay Kim Creator Kay technical writer Inrupt newcomer Solid Kyra Assaad Creator Kyra Assaad Product Designer Inrupt work ensure Solid user experience accessible useable all Passionate increasing representation participation women people colour underrepresented group Solid community helped form serf one chair Solid Diversity Equity Inclusion DEI team Virginia Balseiro Creator web developer cochair Solid Community Group ha actively involved Solid Project since  founder Women Solid group member Solid Team advocate openness transparency inclusion positive collaboration within Solid community also contributes development standardization Solid Technical Reports guideline editor Vincent Tunru Creator Vincent Tunru frontend engineer ha worked Inrupt worked finding technology help ensuring open access academic research focusing technical writing app developer learn build Solid apps Ted Thibodeau Creator  TallTed Technical Evangelist  employed since December  working internal external user including      others ha also contributing number Identity RDF RWW Linked Datafocused related projects including      several others Jeff Zucker Creator Jeff Zucker ha developed software led project UNICEF UNESCO New York City Department Ageing Columbia University notforprofit agency internationally Oregon USA published author book article multicultural education adult literacy relationship technology society well number open source software packages Timea Turdean Creator Software Engineer Inrupt part  Administrators Administrators responsible administration tools systems service used advancing Solid Tim BernersLee Administrator Sir Tim BernersLee cofounder Chief Technology Officer Inrupt Jackson Morgan Administrator Jackson Morgan freelance Solid developer Justin Bingham Administrator Justin Bingham cofounder Chief Technology Officer Janeiro Digital Alain Bourgeoa Administrator maintainer work several team  Whats New Developers Users Community Got question thats here Try asking  Definitions exactly personal data Personal data personal refers data set describing person ranging physical attribute preference behaviour Personal data legal concept technical concept utilised jurisdictions details Examples personal data include location genome data written communication spoken communication list contacts internet browsing habits financial transactions supermarket spending tax payments criminal record laptop mobile phone camera lens recording device microphone recordings driving habit via car trackers mobile health records fitness activity nutrition substance use heartbeat sleep pattern vital signs Europe any information relating identified identifiable natural person data subject identifiable natural person one identified directly indirectly particular reference identifier name identification number location data online identifier one factor specific physical physiological genetic mental economic cultural social identity natural person interoperability According  interoperability quality able used together example use Solid app store data apps Pods interoperable Also able reuse data one Solid calendar app another apps interoperable Pod Pod data stored Web Solid  user may store data one Pod several Pods application read write data Pod depending authorisation granted user user associated Pod WebID WebID unique identifier used identify specific user example WebID could look like is httpsfulanopodproviderprofilecardme share data third party user associate sharing preference WebID third party Dont worry though  details WebID dereferenced profile document serialized  Solid WebIDs used identify Agents ie people organisation well manage access right though  Pods different WebIDs two different things   provided two potentially distinct entities Pod Provider host Pods Identity Provider allows one account identified WebID log multiple apps log Solid apps andor access data Pods provide WebID login Identity Provider like Sign Google today possible company organisation Pod Provider Identity Provider although distinct separable service compatible Pod Providers Identity Providers which mean free choose provider suit most details Identity Provider implement identification protocol eg  allows prove WebID Pod Provider delivers storage space one domains usually but necessarily pointed webID solidstorage pod statement included profile document associated WebID Web Standards doe Solid relate Web standards Solid doe reinvent wheel use Solid still able access data using Web browser computer Solid still web thing added assumption overturned  Solid adds identification system instead sign everything Google Facebook sign favourite Solid provider wont tracked Ubiquitous sharing control share anything anybody matter social medium happen part of sort personal cloud storage USB storage sky called Pod Solid overturn assumptions start Solid app instead app storing data itself store Pod use app choose app use choose Pod use app detail Solid built top existing Web standards core Solid specification relies  based vocabularies Solid also us subset UPDATE HTTP PATCH queries Identification Solid based andor  Storage Solid user expected setup server selfhost No Selfhosting mean data would sit home physical hard drive server Selfhosting possible essential using Solid currently requires technical knowledge Solid user rely Identity Provider Pod Provider expected particular expertise also possible selfhost become small Identity Provider Pod Provider provide Solid family association friend detail Solid standard open implementation meaning anyone selfhost Identity Pod Identity Pod group users data exist one Pod Yes data point exist one Pod choose one Pod deliberately example work home case data may relevant settings also choose single Pod give selective access data relevant multiple user may replicated slightly different way another person Pod example conversation someone data may stored Pod Pod person spoke with possible use Solid offline at least partially Eventually yes Solid long term vision includes local first flexibility different topology patchpassing sync networks However implementation yet want leave Pod provider take data me Yes unless Pod provider doesnt allow to best way understand service particular Pod provider read Terms support tool like help understand small print easily detail data Solid Pods structured according Linked Data principle application writing first place Therefore Pod Provider completely neutral regarding Pod content data structure supported Pod Provider storage technology picked Pod Provider  using Solid data stored depends Pod Provider user point view data stored important accessed controlled matter Pod Provider is order Solid compliant ha expose data way resource folders Howeverthe implementors standard free pick underlying technology according purpose constraints performance may vary one Pod Provider another detail standard Solid describes interaction model system must compliant with Pod Provider expose REST readwrite interface clients storage technology irrelevant Webbased systems interface bind storage specific Pod Provider Identification Solid help store data organisation individual Yes WebID doe necessarily identify single physical person organisation company get WebID generally WebID may used identify family team group people Since right Pod attached WebIDs Solid Pods store data use case procedure signed two profile locations difference two Solid specification implemented variety identity providers Pod providers apps allows use service variety provider take data along switch ie compatible find difference service provider looking respective website term conditions two WebIDs two different identity provider identity provider much like two email addresses WebIDs unrelated other different data sharing preference attached them eg one allowed access company documents health record join Solid stop using want Yes leave Solid need to Delete Pods Delete WebID Pod Provider may offer procedure delete Pods mean closing storage space rented you Pods deleted delete WebID closing account Identity Provider Pod Providers exact procedure may differ Identity Provider other Remember need log Identity Provider access Pods delete Identity Provider account first may lock Pods detail Technically may host profile independently Identity Provider point WebID control case fully delete Solid identity may want delete profile document well Business Model Pod provider get paid who determined market likely several business model emerge user pay storage funded advertising instance like current Web platforms However Solid term Pod Provider change want switch advertisingfree Provider conveniently without losing data contact chat history everyone used Solid would lose favourite internet services No Search engine communication tool need track work Hopefully time nice thing get silo dont let determine data sharing preference echoed new solidcompatible one do Bigger Picture Doesnt Data Transfer Project fix data concerns great start next step build healthy array option user make data work themselves integrate iOS Android apps Solid possible developer take iOS Android app make Solid compatible following standard supporting documentation detail Currently developer kit development Android iOS really want app installed Android iOS might consider writing progressive web app writing hybrid app Arguably Semantic Web Linked Data never took off Solid working it principle technology always meant make data reusable make data independent applications core Solid detail Semantic Web Linked Data technology centered question interoperability using technologies data provided context made reusable order achieve one goal Solid enable application share reuse data without control it kind interoperability key Semantic Web Linked Data principle technology seemed fittest purpose Solid use blockchain No Solid blockchain technology interact use blockchain initiatives Security Solid mean wont need many passwords Yes use Solid need login Identity Provider use application interact Pod without logging individually in opinion simpler create account every service However still manage data would like share application data Pod safe Pod encrypted stored provider system depends Pod Provider Pod provider Solid compliant without encrypting data stored Pod provider system encryption important you use Pod provider doe encrypt data Solid standard describes rule controlling access data encryption dependant storage system controlled Pod Provider data safe use Solid application depends app data always encrypted transit Pod app vice versa always conscious apps using term apps Solid allows selectively share data specific applications data Pod one physical place Data Pod stored choose Pod be either store Pod Pod provider chose selfhost data single Pod centrally stored place data one place doe become vulnerable target hackers data necessarily one place since store piece data across several Pods come malicious cyber attacks attack single source many people data generally likely individual level Solid prevent rd party replicating data legitimate access  No Solid user grant permission thirdparty apps access data hisher Pod said application ha read access data cannot prevent duplicating which cannot current application either change control exactly information app ha access to revoke access time happens access right revoked  revoke access application data still hold copy data previously accessed Solid cannot delete data already sent out soon start using Solid able deliberate data sharing preference point onwards revoke access application data point time application previously duplicated data right access copy destroyed However application longer able update copy according modification make Pod detail would like ask data deleted services Europe law called make possible European citizen ask data deleted find template letter instruction exercise right  Apps data today move data Solid still copy  Yes Today people organisation copy data may not join Solid move data there doe prevent apps already data keep copy However apps ask authorization access new data store Solid Could Solid technology tool trace control criminal actions law determines remit government track control criminal action user choice store Pod would determine jurisdiction oversight data Pod Expect user based Europe case General Data Protection Regulation applies regardless Pod stored Pod provider legally responsible data storing Pod provider commitment individual legal entity provide service based law country hosting provider operating Pod provider seek professional advice compliant individual Solid user carefully read agreement hosting provider agreeing Could Solid become another tech giant monopoly No Solid company open standard Could dominate technical landscape adopted many Yes would ideal would one interoperable Solid web many However compliant Solid doe require developer ask permission anyone building applications doe prevent user choosing apps want share data see fit sense Solid cannot become monopoly way Web considered tech monopoly Could Solid app Pod become another tech giant monopoly No Although app Pod could become popular Solid always possible user leave another competitor app Pod People want different thing unlikely one size fit all optin optout share data using Solid Optin default share data give active consent share data dont want share data all Solid make sure minimum amount data shared still providing services service need know something able function example send product company need know send product to dont want share data services may able use them Due nature access control Solid dont want allow app access piece data Pod that dont want certain app read data Pod give access right However would still allowed read public data Pod if available control data child using Solid child parent guardian child responsible managing data sharing preference child reach legal age consent country location use Solid control data die decide based agreement hosting provider app using need Solid already law data protection Data protection law nutshell tend promote transparency around data use insist informed explicit consent user Solid provides tool make possible Isnt free Web service good exchange giving access data Thats you Solid give choice wise trust people make ethical decision complicated issue lot variation people feel right wrong ultimately decide data Solid doe try help make informed choice providing relevant information constantly validating accuracy information apps vulnerable Origin bypass Solid specification trusted apps feature new experimental known ha common weakness  origin validation Currently user give Solid web app access Pod app Origin added user list trusted apps app receives token allows interact Pod behalf user Origin included interaction verified using list trusted apps Although standard browser automatically include Origin send HTTPS requests nonbrowser client required send one mean anyone access aforementioned Originbased token use nonbrowser client bypass Origin validation Pod Solutions already planned revise replace experimental use Origin order evolve security trusted app feature Whats New Developers Users Community Terms Use URI Persistence Policy Last modified  information made available Web important integrity Web society based upon it URIs used reference information used well future information persist identified end Solid Project host make following pledge far able resource solidprojectorg Web site declared see below persistent Pledge host ensure persistent resource continue available throughout life Solid Project persistent resource modified change history archived though archive necessarily available publicly Solid Project disbanded Web site granted right make copy at different URI public persistent resource long modified preserved entirety made available free charge provided persistence policy applied historical mirrors event original httpssolidprojectorg web site handed management another organization organization pledge policy one considered persistent note persistent resource include home page httpssolidprojectorg start httpssolidprojectorg immediately followed four decimal digits start httpssolidprojectorgTR immediately followed four decimal digits representation made persistence policy information site intent set example reducing failure link due clumsy management inadequate commitment information persistence provide stable reference base information Solidrelated topic service community Solid Project  Whats New Developers Users Community Developer Resources Tutorials guide get started developing Solid applications provide Solid libraries feel free contribute tutorial demonstrate use them Please dont hesitate share application develop community  Whats New Developers Users Community Specification Solid Specification consists several  edited  Contributing specification contributing please read  Join providing substantial contributions Note Solid encourages adherence WCs  particular  Anyone contribute filing submitting  Present proposal via relevant meeting communication channels Submit new User Stories repository tagged according aspect Solid relevant them specification panel easily find work item hand Help formulate Use Cases Requirements UCR based User Stories TR Upcoming WebIDProfile UCR   Solid UCRs reviewed Diversity Equity Inclusion Team  Join Solid listen provide insight suggest topic discussion Meeting schedules agenda minute found GitHub page panel Please read calling in detail contribute found  proposal undergo Editorial review process information proposal submission reviews see  Tracking Progress Keep uptodate specification progress signing  Minutes meeting kept track ongoing discussions Whats New Developers Users Community colicensed MIT license Creative Commons Attribution  International CC  license cover code copy respectively individual licensors repository mentioned licensemd repo well overview table below Solid Logo CCBY  license wa designed Guillaume Baudusseau Whats New Developers Users Community Introduction guideline help representing Solid brand apps communications content events project assets incorporate guidance visual element logos colours typography iconography graphic devices also guidance writing tone format guideline intended digital application need brand guidelines defined entity Solid ha identity consistent identity easier identified identify with Solid brand may appear range different place different purposes following guideline helping retain consistency build stronger identity app developer Please use guideline instance looking reference Solid particular please pay notice guideline logo colour usage well refer Solid key element text event organiser communicationscontent creator looking create Solid communications collateral content please follow aspect guidelines  Values Solid ha core value embodied everything represents represents it Interoperability Selfdetermination Equal access Sourcing Public Value Connecting Logo one single Solid logo two different applications Contained Lettermark within solid hex shape Usage used flat colour overlaid image used complex pattern close proximity logos typography graphic elements Outlined Lettermark within outline hex shape Usage used solid Royal Lavender CDFF background used close proximity logos typography graphic elements  Colour Primary Royal Lavender  CDFF R G B Usage conjunction outlined Solid logo key branding element eg mastheads footer primary CTA buttons used fill within Avoid using numerous time one environment Secondary Geyser Grey  DAEE R G B Usage core functionality signposting eg icon secondary buttonscontrols Avoid use content Tertiary Calatina Blue   R G B Usage background fills UI functionality dividers illustration Flamengo Pink  FF R G B Usage background fill illustration Utility colour Header Blue   R G B Usage non header copy Avoid using anything else Body Grey   R G B Usage non header copy Avoid using anything else Warning Orange  FFA R G B Usage warning message Error Red  DB R G B Usage error messaging  Typography Solid brand feature two typefaces Volkhov Usage headlines sub headlines buttons pull quote Neue Einstellung Usage body copy links controls label  Iconography Solid us icon provided  ease also ensure icon usableaccessible possible  Gradients Solid ha one gradient combine Primary Royal Lavender Secondary Deep Sky Blue Cerulean Blue colour equal part  Usage background overlay greyscale image used logo typography icon graphics  Graphic element Solid hex pattern Usage used unbroken background fill incorporated content graphics  Written tone writing Solid communication content look adhere following tone voice principles Clear instantly understood anyone technicallyminded not fundamental ensuring Solid meet core value see above mean describing thing term everyone understand avoiding jargon ambiguous abbreviationacronyms terminology isnt vocabulary majority people Honest true anything delivers key ensuring Solid always remains genuine trustworthy Avoid using embellishment describing Solid excessively glowing terms Accuracy information also key achieving integrity Solid say protected times Solid candid truth time avoid frank outspoken Open Solid always welcoming approachable tone language  anyone made feel like part community always generous share never feel like withholding information Solid avoid doctrine overlydirective favour offering guidance advice  Written format Solid Pod always always capitalised never written allcaps WebID semicapitalised General writing always sentence case avoid nonstandard capitalisation example internet web decapitalised  British spelling serial comma generic used specify person unknown gender website copy mailing list Whats New